[
  {
    "name": "应用上下文 app",
    "href": "https://doc.quickapp.cn/features/system/app.html",
    "methods": [
      {
        "name": "getInfo",
        "desc": "获取当前应用信息",
        "args": [],
        "example": "console.log(JSON.stringify(app.getInfo()))\n",
        "return": [
          {
            "name": "packageName",
            "type": "String",
            "desc": "应用包名",
            "since": "1050",
            "attributes": []
          },
          {
            "name": "icon",
            "type": "String",
            "desc": "应用图标路径",
            "since": "1050",
            "attributes": []
          },
          {
            "name": "name",
            "type": "String",
            "desc": "应用名称",
            "since": "",
            "attributes": []
          },
          {
            "name": "versionName",
            "type": "String",
            "desc": "应用版本名称",
            "since": "",
            "attributes": []
          },
          {
            "name": "versionCode",
            "type": "Integer",
            "desc": "应用版本号",
            "since": "",
            "attributes": []
          },
          {
            "name": "logLevel",
            "type": "String",
            "desc": "log 级别",
            "since": "",
            "attributes": []
          },
          {
            "name": "source",
            "type": "Object",
            "desc": "应用来源",
            "since": "",
            "attributes": [
              {
                "name": "packageName",
                "type": "String",
                "desc": "来源 app 的包名，一级来源",
                "since": "",
                "attributes": []
              },
              {
                "name": "type",
                "type": "String",
                "desc": "来源类型，二级来源，值为 shortcut、push、url、barcode、nfc、bluetooth、other",
                "since": "",
                "attributes": []
              },
              {
                "name": "extra",
                "type": "Object",
                "desc": "来源其他信息，与 type 相关，不同的 type，extra 中的字段会不同",
                "since": "",
                "attributes": []
              }
            ]
          }
        ]
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.app",
    "moduleVariable": "app",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "日志打印 console",
    "href": "https://doc.quickapp.cn/features/system/log.html",
    "methods": [
      {
        "name": "",
        "desc": "",
        "since": "",
        "example": "console.log('log:我是log')\nconsole.debug('debug:我是debug')\nconsole.info('info:我是info')\nconsole.warn('warn:我是warn')\nconsole.error('error:我是error')\n",
        "args": [],
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "",
    "moduleVariable": "",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "页面路由 router",
    "href": "https://doc.quickapp.cn/features/system/router.html",
    "methods": [
      {
        "name": "push",
        "desc": "跳转到应用内的某个页面",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "要跳转到的 uri，可以是下面的格式：包含 schema 的完整 uri；目前支持的 schema 有 tel，sms 和 mailto，例如 tel:10086。以‘/’开头的应用内页面的路径；例：/about。以非‘/’开头的应用内页面的名称;例：About。特殊的,如果 uri 的值是\"/\",则跳转到 path 为\"/\"的页,没有则跳转到首页支持包含 schema 的完整 uri。对于带有 schema 的 uri，处理流程如下：查找 app 下所有 page 的 filter 设置来选择合适的 page 处理请求（参见manifest 文件）如果没有合适的 page 能够处理请求，会使用默认策略来处理请求。目前默认策略支持对 http、https、internal 这几种 schema 的处理如果默认策略也不能处理请求，会尝试使用系统中的应用来处理请求如果没有系统应用可以处理请求，会抛弃请求默认策略的处理逻辑：如果 schema 是 http/https，会用内置的 web 页面打开网页如果 schema 是 internal（参见文件组织），会根据 uri 的文件扩展名来确定文件类型，再调用系统中的应用打开文件如果 schema 是 hap（参见hap 链接），会跳转到 hap 链接 所支持的类型",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "params",
                "type": "Object",
                "desc": "跳转时需要传递的数据，跳转到短信发送页面时，可以通过body（1040+）插入短信内容；跳转到快应用页面时，参数可以在页面中通过this.param1的方式使用，param1 为 json 中的参数名，param1 对应的值会统一转换为 String 类型",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "body",
                    "type": "String",
                    "desc": "跳转时短信发送页面时携带的短信内容。",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "___PARAMLAUNCH_FLAG\\__",
                    "type": "String",
                    "desc": "快应用启动参数，目前仅支持\"clearTask\"，在启动目标页面时会清除除此页面外的其他页面。详见页面启动模式",
                    "since": "1050",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "replace",
        "desc": "跳转到应用内的某个页面，当前页面无法返回",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "要跳转到的 uri，可以是下面的格式：以\"/\"开头的应用内页面的路径；例：/about。以非\"/\"开头的应用内页面的名称;例：About。特殊的,如果 uri 的值是\"/\",则跳转到 path 为\"/\"的页,没有则跳转到首页",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "params",
                "type": "Object",
                "desc": "跳转时需要传递的数据，参数可以在页面中通过this.param1的方式使用，param1 为 json 中的参数名，param1 对应的值会统一转换为 String 类型",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "router.replace({\n  uri: '/test',\n  params: {\n    testId: '1'\n  }\n})\n",
        "return": []
      },
      {
        "name": "back",
        "desc": "返回指定页面",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "path",
                "type": "String",
                "desc": "返回目标页面的路径，可以是以下几种取值：不传该参数，返回上一页面以\"/\"开头的应用内已打开页面的路径；例：/about。特殊的,如果 path 的值是\"/\",则跳转到页面名称为\"/\"的页,没有则跳转到首页注意点：path 需要是以\"/\"开头的当前应用已经打开的页面路径，否则均视为无效参数，返回上一页面若根据 path 未匹配到已经打开的页面，返回上一页面若根据 path 参数匹配到多个页面，返回至最后打开的页面",
                "since": "1020",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "// A页面, open page by name\nrouter.push({\n  uri: 'B'\n})\n// B页面, open page by name\nrouter.push({\n  uri: 'C'\n})\n// C页面, open page by name\nrouter.push({\n  uri: 'D'\n})\n// D页面, open page by name\nrouter.push({\n  uri: 'E'\n})\n// E页面不传入页面路径，返回至D页面\nrouter.back()\n// D页面不传入页面名称，返回至C页面\nrouter.back()\n// C页面传入页面路径，返回至A页面\nrouter.back({\n  path: '/A'\n})\n",
        "return": []
      },
      {
        "name": "clear",
        "desc": "清空所有历史页面记录，仅保留当前页面",
        "args": [],
        "example": "router.clear()\n",
        "return": []
      },
      {
        "name": "getLength",
        "desc": "获取当前页面栈的页面数量",
        "args": [],
        "example": "var length = router.getLength()\nconsole.log(`page's length = ${length}`)\n",
        "return": [
          {
            "name": "",
            "type": "Number",
            "desc": "页面数量",
            "since": "",
            "attributes": []
          }
        ]
      },
      {
        "name": "getState",
        "desc": "获取当前页面状态",
        "args": [],
        "example": "var page = router.getState()\nconsole.log(`page index = ${page.index}`)\nconsole.log(`page name = ${page.name}`)\nconsole.log(`page path = ${page.path}`)\n",
        "return": [
          {
            "name": "index",
            "type": "Number",
            "desc": "当前页面在页面栈中的位置",
            "since": "",
            "attributes": []
          },
          {
            "name": "name",
            "type": "String",
            "desc": "当前页面的名称",
            "since": "",
            "attributes": []
          },
          {
            "name": "path",
            "type": "String",
            "desc": "当前页面的路径",
            "since": "",
            "attributes": []
          }
        ]
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.router",
    "moduleVariable": "router",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "后台运行 resident",
    "href": "https://doc.quickapp.cn/features/system/resident.html",
    "methods": [
      {
        "name": "start",
        "desc": "启动后台运行。此接口可多次调用，最后一次调用时的 desc 参数作为描述文案显示到通知栏上(有音乐播放通知时，不显示本通知)。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "desc",
                "type": "String",
                "desc": "更新后台通知的描述信息",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "resident.start({\n  desc: '备份进度 30%'\n})\n",
        "return": []
      },
      {
        "name": "stop",
        "desc": "停止后台运行。即使start调用多次，stop调用一次即可停止后台运行。",
        "args": [],
        "example": "resident.stop()\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.resident",
    "moduleVariable": "resident",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "应用配置 configuration",
    "href": "https://doc.quickapp.cn/features/system/configuration.html",
    "methods": [
      {
        "name": "getLocale",
        "desc": "获取应用当前的语言环境。默认使用系统的语言环境，会因为设置或系统语言环境改变而发生变化",
        "args": [],
        "example": "const locale = configuration.getLocale()\nconsole.log(locale.language)\n",
        "return": [
          {
            "name": "language",
            "type": "String",
            "desc": "语言",
            "since": "",
            "attributes": []
          },
          {
            "name": "countryOrRegion",
            "type": "String",
            "desc": "国家或地区",
            "since": "",
            "attributes": []
          }
        ]
      },
      {
        "name": "setLocale",
        "desc": "设置应用的语言环境。设置完成后，应用会按照新的语言环境来更新页面，并回调onConfigurationChanged1060+生命周期函数。当系统语言发生变化或应用重新进入时，当前语言环境会重置为系统语言；Web组件与Fetch接口在请求Header中会携带对应的Accept-Language",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": []
          }
        ],
        "example": "configuration.setLocale({\n  \"language\": \"zh\",\n  \"countryOrRegion\": \"CN\"\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.configuration",
    "moduleVariable": "configuration",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "分享 share",
    "href": "https://doc.quickapp.cn/features/system/share.html",
    "methods": [
      {
        "name": "share",
        "desc": "分享数据到其他 app",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "type",
                "type": "String",
                "desc": "数据的 MIME TYPE，要求字母全小写",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "data",
                "type": "String",
                "desc": "分享的数据：1. 如果 type 是 text/开头的 mimetype（如 text/plain），则 data 是要分享的文本内容；2. 如果 type 是其他值，则 data 是要分享的文件路径。支持三种文件路径：1. 通过 fetch.fetch 下载的文件路径；2. 通过 file.save 或 list 获得的文件路径；3. 以/开头的应用内部的资源文件。",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。因为大部分 android app 都没有正确的返回分享状态，所以即使分享成功了，也可能执行 cancel 回调，而不是 success 回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "share.share({\n  type: 'text/html',\n  data: '<b>bold</b>',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.share",
    "moduleVariable": "share",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "弹窗 prompt",
    "href": "https://doc.quickapp.cn/features/system/prompt.html",
    "methods": [
      {
        "name": "showToast",
        "desc": "显示 Toast",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "message",
                "type": "String",
                "desc": "要显示的文本",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "duration",
                "type": "Number",
                "desc": "0 为短时，1 为长时，默认 0",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "prompt.showToast({\n  message: 'message'\n})\n",
        "return": []
      },
      {
        "name": "showDialog",
        "desc": "显示对话框",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "title",
                "type": "String",
                "desc": "标题",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "message",
                "type": "String",
                "desc": "内容",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "buttons",
                "type": "Array",
                "desc": "按钮的数组，按钮结构：{text:'text',color:'#333333'}，color 可选：buttons 的第 1 项为 positive button；buttons 的第 2 项（如果有）为 negative button；buttons 的第 3 项（如果有）为 neutral button。最多支持 3 个 button",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "autocancel",
                "type": "Boolean",
                "desc": "是否在点击遮罩时关闭对话框，默认为true",
                "since": "1060",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "index",
                    "type": "Integer",
                    "desc": "选中按钮在 buttons 数组中的序号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "prompt.showDialog({\n  title: 'title',\n  message: 'message',\n  buttons: [\n    {\n      text: 'btn',\n      color: '#33dd44'\n    }\n  ],\n  success: function(data) {\n    console.log('handling callback')\n  },\n  cancel: function() {\n    console.log('handling cancel')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "showContextMenu",
        "desc": "显示上下文菜单",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "itemList",
                "type": "Array",
                "desc": "按钮的文字数组",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "itemColor",
                "type": "HexColor",
                "desc": "按钮颜色",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "index",
                    "type": "Integer",
                    "desc": "选中按钮在 itemList 数组中的序号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "prompt.showContextMenu({\n  itemList: ['item1', 'item2'],\n  itemColor: '#ff33ff',\n  success: function(data) {\n    console.log('handling success')\n  },\n  cancel: function() {\n    console.log('handling cancel')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.prompt",
    "moduleVariable": "prompt",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "打开网页 webview",
    "href": "https://doc.quickapp.cn/features/system/webview.html",
    "methods": [
      {
        "name": "loadUrl",
        "desc": "打开网页，标题栏样式与打开 webview 的页面的标题栏样式相同，在 webview 的 useragent 后追加内容，格式是 hap/<平台版本号>/<厂商标识> <平台应用包名>/<平台应用版本号> <应用名>/<应用版本号> (<来源信息>)。“来源信息”与 app 接口的 getInfo 方法返回结果中的 source 字段相同。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "url",
                "type": "String",
                "desc": "要加载的页面 url",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "allowthirdpartycookies",
                "type": "Boolean",
                "desc": "是否支持第三方 cookies，设置为 true 时开启接收第三方 cookies。 注意：allowthirdpartycookies只支持安卓 5.0 及以上系统。5.0 以下默认为 true",
                "since": "1030",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "location.href='hap://app/org.hapjs.demo.sample/page?key=value'\nlocation.href='http://hapjs.org/app/org.hapjs.demo.sample/page?key=value'\nlocation.href='https://hapjs.org/app/org.hapjs.demo.sample/page?key=value'\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.webview",
    "moduleVariable": "webview",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "通知消息 notification",
    "href": "https://doc.quickapp.cn/features/system/notification.html",
    "methods": [
      {
        "name": "show",
        "desc": "显示通知",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "contentTitle",
                "type": "String",
                "desc": "标题",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "contentText",
                "type": "String",
                "desc": "内容",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "clickAction",
                "type": "Object",
                "desc": "通知点击后触发动作的信息",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "点击通知后跳转的页面地址。支持的格式包括：以\"/\"开头的应用内页面的路径；例：/about以非\"/\"开头的应用内页面的名称;例：About特殊的,如果 uri 的值是\"/\",则跳转到 path 为\"/\"的页,没有则跳转到首页可以通过\"?param1=value1\"的方式添加参数，参数可以在页面中通过this.param1的方式使用",
                    "since": "",
                    "required": true,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "notification.show({\n  contentTitle: 'title',\n  clickAction: {\n    uri: '/index.html?index=1'\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.notification",
    "moduleVariable": "notification",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "上传下载 request",
    "href": "https://doc.quickapp.cn/features/system/request.html",
    "methods": [
      {
        "name": "upload",
        "desc": "上传文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "url",
                "type": "String",
                "desc": "资源 url",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "header",
                "type": "Object",
                "desc": "请求的 header，会将其所有属性设置到请求的 header 部分。User-Agent 设置在1040版本开始支持。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "method",
                "type": "String",
                "desc": "默认为 POST，可以是： POST, PUT",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "files",
                "type": "Array",
                "desc": "需要上传的文件列表，使用 multipart/form-data 方式提交",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "filename",
                    "type": "String",
                    "desc": "multipart 提交时，header 中的文件名",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "multipart 提交时，表单的项目名,默认 file",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "文件的本地地址",
                    "since": "",
                    "required": true,
                    "attributes": []
                  },
                  {
                    "name": "type",
                    "type": "String",
                    "desc": "文件的 Content-Type 格式,默认会根据 filename 或者 uri 的后缀获取",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "data",
                "type": "Array",
                "desc": "HTTP 请求中其他额外的 form data",
                "since": "1000",
                "required": false,
                "attributes": [
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "form 元素的名称。",
                    "since": "",
                    "required": true,
                    "attributes": []
                  },
                  {
                    "name": "value",
                    "type": "String",
                    "desc": "form 元素的值。",
                    "since": "",
                    "required": true,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功返回的回调函数",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "code",
                    "type": "Integer",
                    "desc": "服务器状态 code",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "data",
                    "type": "String",
                    "desc": "如果服务器返回的 header 中 type 是 text/*或 application/json、application/javascript、application/xml，值是文本内容，否则是存储的临时文件的 uri 临时文件如果是图片或者视频内容，可以将图片设置到 image 或 video 控件上显示",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "headers",
                    "type": "Object",
                    "desc": "服务器 response 的所有 header",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败的回调函数",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "结束的回调函数（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "request.upload({\n  url: 'http://www.example.com',\n  files: [\n    {\n      uri: 'internal://xxx/xxx/test',\n      name: 'file1',\n      filename: 'test.png'\n    }\n  ],\n  data: [\n    {\n      name: 'param1',\n      value: 'value1'\n    }\n  ],\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "download",
        "desc": "下载文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "url",
                "type": "String",
                "desc": "资源 url",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "header",
                "type": "String",
                "desc": "请求的 header，会将其所有属性设置到请求的 header 部分。User-Agent 设置在 1040 版本开始支持。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "description",
                "type": "String",
                "desc": "下载描述，会用于通知栏标题。默认为文件名",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "filename",
                "type": "String",
                "desc": "下载文件名。默认从网络请求或 url 中获取",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功返回的回调函数",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "token",
                    "type": "String",
                    "desc": "下载的 token，根据此 token 获取下载状态",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败的回调函数",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "结束的回调函数（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "request.download({\n  url: 'http://www.example.com',\n  success: function(data) {\n    console.log(`handling success${data.token}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "onDownloadComplete",
        "desc": "监听下载任务",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "token",
                "type": "String",
                "desc": "download 接口返回的 token",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功返回的回调函数",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "下载文件的 Uri",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败的回调函数",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "结束的回调函数（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "request.onDownloadComplete({\n  token: '123',\n  success: function(data) {\n    console.log(`handling success${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.request",
    "moduleVariable": "request",
    "bgRestrictDesc": "manifest 中申请后可用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "数据请求 fetch",
    "href": "https://doc.quickapp.cn/features/system/fetch.html",
    "methods": [
      {
        "name": "fetch",
        "desc": "获取网络数据",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "url",
                "type": "String",
                "desc": "资源 url",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "data",
                "type": "String/Object/ArrayBuffer",
                "desc": "请求的参数，可以是字符串，或者是 js 对象、arraybuffer 对象。参考 data与Content-Type关系 部分",
                "since": "1030",
                "required": false,
                "attributes": []
              },
              {
                "name": "header",
                "type": "Object",
                "desc": "请求的 header，会将其所有属性设置到请求的 header 部分。User-Agent 设置在1040版本开始支持。示例：{\"Accept-Encoding\": \"gzip, deflate\",\"Accept-Language\": \"zh-CN,en-US;q=0.8,en;q=0.6\"}",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "method",
                "type": "String",
                "desc": "默认为 GET，可以是：OPTIONS，GET，HEAD，POST，PUT，DELETE，TRACE，CONNECT",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "responseType",
                "type": "String",
                "desc": "支持返回类型是 text，json，file，arraybuffer，默认会根据服务器返回 header 中的 Content-Type 确定返回类型，详见 success返回值。",
                "since": "1030",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功返回的回调函数",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "code",
                    "type": "Integer",
                    "desc": "服务器状态 code",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "data",
                    "type": "String/Object /ArrayBuffer",
                    "desc": "参考 responseType与success中data关系 部分",
                    "since": "1030",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "headers",
                    "type": "Object",
                    "desc": "服务器 response 的所有 header",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败的回调函数，可能会因为权限失败",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "结束的回调函数（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "fetch.fetch({\n  url: 'http://www.example.com',\n  responseType: 'text',\n  success: function(response) {\n    console.log(`the status code of the response: ${response.code}`)\n    console.log(`the data of the response: ${response.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(response.headers)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errMsg = ${data}`)\n    console.log(`handling fail, errCode = ${code}`)\n  }\n})\n\n// 我们也可以使用promise的方式处理回调\nfetch\n  .fetch({\n    url: 'http://www.example.com',\n    responseType: 'text'\n  })\n  .then(res => {\n    const result = res.data\n\n    console.log(`the status code of the response: ${result.code}`)\n    console.log(`the data of the response: ${result.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(result.headers)}`\n    )\n  })\n  .catch(error => {\n    console.log(`handling fail, errMsg = ${error.data}`)\n    console.log(`handling fail, errCode = ${error.code}`)\n  })\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.fetch",
    "moduleVariable": "fetch",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "WebSocket",
    "href": "https://doc.quickapp.cn/features/system/websocket.html",
    "methods": [
      {
        "name": "create",
        "desc": "创建 websocket 实例",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "url",
                "type": "String",
                "desc": "请求 url， 必须是 wss 或 ws 协议",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "header",
                "type": "Object",
                "desc": "请求头，header 中不能设置 Referer，User-Agent设置在1040版本开始支持",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "protocols",
                "type": "StringArray",
                "desc": "子协议组",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "ws.onerror = function(data) {\n  console.log(`onerror data.data = ${data.data}`)\n}\n",
        "return": [
          {
            "name": "",
            "type": "WebSocket",
            "desc": "返回一个 WebSocket 对象，请参考 WebSocket 对象",
            "since": "",
            "attributes": []
          }
        ]
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.websocketfactory",
    "moduleVariable": "websocketfactory",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "数据存储 storage",
    "href": "https://doc.quickapp.cn/features/system/storage.html",
    "methods": [
      {
        "name": "get",
        "desc": "读取存储内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "key",
                "type": "String",
                "desc": "索引",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "default",
                "type": "String",
                "desc": "如果 key 不存在，返回 default。如果 default 未指定，返回长度为 0 的空字符串",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "storage.get({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "set",
        "desc": "修改存储内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "key",
                "type": "String",
                "desc": "索引",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "value",
                "type": "String",
                "desc": "新值。如果新值是长度为 0 的空字符串，会删除以 key 为索引的数据项",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "storage.set({\n  key: 'A1',\n  value: 'V1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "clear",
        "desc": "清空存储内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "storage.clear({\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "delete",
        "desc": "删除存储内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "key",
                "type": "String",
                "desc": "索引",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "storage.delete({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "key",
        "desc": "返回存储中某个 index 的键名",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "index",
                "type": "Number",
                "desc": "要查询的键名对应的索引",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "let length = storage.length\n",
        "return": [],
        "since": "1050"
      }
    ],
    "listeners": [],
    "attributes": [
      {
        "name": "length",
        "type": "Number",
        "desc": "存储里的数据项的数量",
        "since": "1050",
        "readable": true,
        "writeable": false
      }
    ],
    "moduleName": "system.storage",
    "moduleVariable": "storage",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "文件存储 file",
    "href": "https://doc.quickapp.cn/features/system/file.html",
    "methods": [
      {
        "name": "move",
        "desc": "将源文件移动到指定位置，接口中使用的 URI 描述请参考文件组织",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "srcUri",
                "type": "String",
                "desc": "源文件的 uri，不能是应用资源路径和 tmp 类型的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "dstUri",
                "type": "String",
                "desc": "目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，返回目标文件的 uri",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.move({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`move success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "copy",
        "desc": "将源文件复制一份并存储到指定位置，接口中使用的 URI 描述请参考文件组织",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "srcUri",
                "type": "String",
                "desc": "源文件的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "dstUri",
                "type": "String",
                "desc": "目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，返回目标文件的 uri",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.copy({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`copy success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "list",
        "desc": "获取指定目录下的文件列表，接口中使用的 URI 描述请参考文件组织",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "目录 uri，不能是应用资源路径和 tmp 类型的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，返回{fileList:[{uri:'file1',lastModifiedTime:1234456, length:123456} ...]}",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "fileList",
                    "type": "Array",
                    "desc": "文件列表，每个文件的格式为{uri:'file1',lastModifiedTime:1234456, length:123456}",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.list({\n  uri: 'internal://files/movies/',\n  success: function(data) {\n    console.log(data.fileList)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "get",
        "desc": "获取本地文件的文件信息，接口中使用的 URI 描述请参考文件组织",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "文件的 uri，不能是应用资源路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "recursive",
                "type": "Boolean",
                "desc": "是否递归获取子目录文件列表。默认false",
                "since": "1060",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，返回{uri:'file1', length:123456, lastModifiedTime:1233456}",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "文件的 uri，该 uri 可以被其他组件或 Feature 访问",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "length",
                    "type": "Number",
                    "desc": "文件大小，单位 B",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "lastModifiedTime",
                    "type": "Number",
                    "desc": "文件的保存是的时间戳，从 1970/01/01 08:00:00 到当前时间的毫秒数",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "type",
                    "type": "String",
                    "desc": "文件类型，dir：目录；file：文件",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "subFiles",
                    "type": "Array",
                    "desc": "文件列表，recursive为true且type为dir时递归返回子目录文件细信息，否则不返回",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.get({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log(data.uri)\n    console.log(data.length)\n    console.log(data.lastModifiedTime)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "delete",
        "desc": "删除本地存储的文件，接口中使用的 URI 描述请参考文件组织",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "需要删除的文件 uri，不能是应用资源路径和 tmp 类型的 uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.delete({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "writeText",
        "desc": "写文本到文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "text",
                "type": "String",
                "desc": "需要写入的字符串",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "encoding",
                "type": "String",
                "desc": "编码格式，默认 UTF-8",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "append",
                "type": "Boolean",
                "desc": "是否追加模式，默认false",
                "since": "1060",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.writeText({\n  uri: 'internal://files/work/demo.txt',\n  text: 'test',\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "writeArrayBuffer",
        "desc": "写 Buffer 到文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "buffer",
                "type": "Uint8Array",
                "desc": "需要写入的 Buffer",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "position",
                "type": "Number",
                "desc": "指向文件开始写入数据的位置的偏移量，默认 0",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "append",
                "type": "Boolean",
                "desc": "是否追加模式，默认false。当为true时，position参数无效",
                "since": "1060",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.writeArrayBuffer({\n  uri: 'internal://files/work/demo',\n  buffer: buffer,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "readText",
        "desc": "从文件中读取文本",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "本地文件路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "encoding",
                "type": "String",
                "desc": "编码格式，默认 UTF-8",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "text",
                    "type": "String",
                    "desc": "读取的文本",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.readText({\n  uri: 'internal://files/work/demo.txt',\n  success: function(data) {\n    console.log('text: ' + data.text)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "readArrayBuffer",
        "desc": "从文件中读取 Buffer",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "本地文件路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "position",
                "type": "Number",
                "desc": "读取的起始位置，默认值为文件的起始位置",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "length",
                "type": "Number",
                "desc": "读取的长度，不填写则读取到文件结尾",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "buffer",
                    "type": "Uint8Array",
                    "desc": "读取的文件内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.readArrayBuffer({\n  uri: 'internal://files/work/demo',\n  position: 100,\n  length: 100,\n  success: function(data) {\n    console.log('buffer.length: ' + data.buffer.length)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "access",
        "desc": "判断文件或目录是否存在",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "目录或文件uri，不能是应用资源路径和tmp类型的uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.access({\n  uri: 'internal://files/test',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1060"
      },
      {
        "name": "mkdir",
        "desc": "创建目录",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "目录的uri，不能是应用资源路径和tmp类型的uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "recursive",
                "type": "Boolean",
                "desc": "是否递归创建该目录的上级目录后再创建该目录。默认false",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.mkdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1060"
      },
      {
        "name": "rmdir",
        "desc": "删除目录",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "目录的uri，不能是应用资源路径和tmp类型的uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "recursive",
                "type": "Boolean",
                "desc": "是否递归删除子文件和子目录。默认false",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "file.rmdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1060"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.file",
    "moduleVariable": "file",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "交换数据 exchange",
    "href": "https://doc.quickapp.cn/features/service/exchange.html",
    "methods": [
      {
        "name": "get",
        "desc": "读取数据",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "package",
                "type": "String",
                "desc": "数据发布方的包名，scope 为 application 时必须提供，为 global 时必须为空",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "sign",
                "type": "String",
                "desc": "数据发布方签名的 SHA-256，scope 为 application 时必须提供，为 global 时必须为空",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "scope",
                "type": "String",
                "desc": "数据发布的空间类型，支持 application 和 global，默认为 application",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "数据的 key",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [
          {
            "name": "value",
            "type": "String",
            "desc": "数据的值",
            "since": "",
            "attributes": []
          }
        ]
      },
      {
        "name": "set",
        "desc": "发布数据到快应用平台",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "key",
                "type": "String",
                "desc": "数据的 key",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "value",
                "type": "String",
                "desc": "数据的值",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "scope",
                "type": "String",
                "desc": "数据发布的空间类型，支持 application，global，默认为 application",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "remove",
        "desc": "从快应用平台删除数据",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "key",
                "type": "String",
                "desc": "数据的 key",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "clear",
        "desc": "从快应用平台清除数据",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "grantPermission",
        "desc": "授权应用获取数据。同签名的应用不用授权，默认有读取权限",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "package",
                "type": "String",
                "desc": "授权应用的包名",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "sign",
                "type": "String",
                "desc": "授权应用的签名 SHA-256",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "数据的 key。如果为空，则授权当前所有 key 的读取权限",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "revokePermission",
        "desc": "取消授权应用获取数据。不能取消同签名应用的读取授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "package",
                "type": "String",
                "desc": "取消授权的应用包名",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "数据的 key。如果为空，则取消当前所有 key 的授权",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.exchange",
    "moduleVariable": "exchange",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "震动 vibrator",
    "href": "https://doc.quickapp.cn/features/system/vibrator.html",
    "methods": [
      {
        "name": "vibrate",
        "desc": "触发震动",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "mode",
                "type": "String",
                "desc": "振动模式，\"long\"表示长振动，\"short\"表示短振动。默认为 long",
                "since": "1030",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "vibrator.vibrate({\n  mode: 'long'\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.vibrator",
    "moduleVariable": "vibrator",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "二维码 barcode",
    "href": "https://doc.quickapp.cn/features/system/barcode.html",
    "methods": [
      {
        "name": "scan",
        "desc": "扫描二维码",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "result",
                    "type": "String",
                    "desc": "解析后的内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "barcode.scan({\n  success: function(data) {\n    console.log(`handling success: ${data.result}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.barcode",
    "moduleVariable": "barcode",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "传感器 sensor",
    "href": "https://doc.quickapp.cn/features/system/sensor.html",
    "methods": [
      {
        "name": "subscribeAccelerometer",
        "desc": "监听重力感应数据。如果多次调用，仅最后一次调用生效",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "interval",
                "type": "String",
                "desc": "监听加速度数据回调函数的执行频率，默认normal",
                "since": "1060",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "重力感应数据变化后会回调此函数。",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "x",
                    "type": "Integer",
                    "desc": "x 轴坐标",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "y",
                    "type": "Integer",
                    "desc": "y 轴坐标",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "z",
                    "type": "Integer",
                    "desc": "z 轴坐标",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "sensor.subscribeAccelerometer({\n  callback: function(ret) {\n    console.log(`handling callback, x = ${ret.x}, y = ${ret.y}, z = ${ret.z}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "unsubscribeAccelerometer",
        "desc": "取消监听重力感应数据",
        "args": [],
        "example": "sensor.unsubscribeAccelerometer()\n",
        "return": []
      },
      {
        "name": "subscribeCompass",
        "desc": "监听罗盘数据。如果多次调用，仅最后一次调用生效",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "罗盘数据变化后会回调此函数。",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "direction",
                    "type": "Number",
                    "desc": "面对的方向度数",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "sensor.subscribeCompass({\n  callback: function(ret) {\n    console.log(`handling callback, direction = ${ret.direction}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "unsubscribeCompass",
        "desc": "取消监听罗盘数据",
        "args": [],
        "example": "sensor.unsubscribeCompass()\n",
        "return": []
      },
      {
        "name": "subscribeProximity",
        "desc": "监听距离感应数据。如果多次调用，仅最后一次调用生效。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "距离感应数据变化后会回调此函数。",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "distance",
                    "type": "Number",
                    "desc": "手机距离，单位为 cm。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "sensor.subscribeProximity({\n  callback: function(ret) {\n    console.log(`handling callback, distance = ${ret.distance}`)\n  }\n})\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "unsubscribeProximity",
        "desc": "取消监听距离感应数据。",
        "args": [],
        "example": "sensor.unsubscribeProximity()\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "subscribeLight",
        "desc": "监听光线感应数据。如果多次调用，仅最后一次调用生效。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "光线感应数据变化后会回调此函数。",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "intensity",
                    "type": "Number",
                    "desc": "光线强度，单位为 lux",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "sensor.subscribeLight({\n  callback: function(ret) {\n    console.log(`handling callback, intensity = ${ret.intensity}`)\n  }\n})\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "unsubscribeLight",
        "desc": "取消监听光线感应数据。",
        "args": [],
        "example": "sensor.unsubscribeLight()\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "subscribeStepCounter",
        "desc": "监听计步传感器数据。如果多次调用，仅最后一次调用生效。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "计步传感器数据变化后会回调此函数。",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "steps",
                    "type": "Number",
                    "desc": "计步传感器当前累计记录的步数。每次手机重启，这个值就会从 0 开始重新计算。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "sensor.subscribeStepCounter({\n  callback: function(ret) {\n    console.log(`handling callback, steps = ${ret.steps}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1050"
      },
      {
        "name": "unsubscribeStepCounter",
        "desc": "取消监听计步传感器数据。",
        "args": [],
        "example": "sensor.unsubscribeStepCounter()\n",
        "return": [],
        "since": "1050"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.sensor",
    "moduleVariable": "sensor",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "剪贴板 clipboard",
    "href": "https://doc.quickapp.cn/features/system/clipboard.html",
    "methods": [
      {
        "name": "set",
        "desc": "修改剪贴板内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "text",
                "type": "String",
                "desc": "需要放到剪切板的内容",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "clipboard.set({\n  text: 'text'\n})\n",
        "return": []
      },
      {
        "name": "get",
        "desc": "读取剪贴板内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "text",
                    "type": "String",
                    "desc": "剪切板内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "clipboard.get({\n  success: function(data) {\n    console.log(`handling success: ${data.text}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.clipboard",
    "moduleVariable": "clipboard",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "地理位置 geolocation",
    "href": "https://doc.quickapp.cn/features/system/geolocation.html",
    "methods": [
      {
        "name": "getLocation",
        "desc": "获取地理位置",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "timeout",
                "type": "Long",
                "desc": "设置超时时间，单位是 ms，默认值为 30000。在权限被系统拒绝或者定位设置不当的情况下，有可能永远不能返回结果，因而需要设置超时。超时后会使用 fail 回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "coordType",
                "type": "String",
                "desc": "坐标系类型，可选值可通过 getSupportedCoordTypes 获取，默认为 wgs84",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "longitude",
                    "type": "Number",
                    "desc": "经度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "latitude",
                    "type": "Number",
                    "desc": "纬度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "accuracy",
                    "type": "Number",
                    "desc": "精确度",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "time",
                    "type": "Number",
                    "desc": "时间",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，原因可能是用户拒绝",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "geolocation.getLocation({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getLocationType",
        "desc": "获取系统当前支持的定位类型",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "types",
                    "type": "Array",
                    "desc": "支持的类型['gps','network']",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "geolocation.getLocationType({\n  success: function(data) {\n    console.log(`handling success: locationType = ${data.types}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "subscribe",
        "desc": "监听地理位置。如果多次调用，仅最后一次调用生效",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "coordType",
                "type": "String",
                "desc": "坐标系类型，可选值可通过 getSupportedCoordTypes 获取，默认为 wgs84",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "每次位置信息发生变化，都会被回调",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "longitude",
                    "type": "Number",
                    "desc": "经度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "latitude",
                    "type": "Number",
                    "desc": "纬度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "accuracy",
                    "type": "Number",
                    "desc": "精确度",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "time",
                    "type": "Number",
                    "desc": "时间",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，原因可能是用户拒绝",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "geolocation.subscribe({\n  callback: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "unsubscribe",
        "desc": "取消监听地理位置",
        "args": [],
        "example": "geolocation.unsubscribe()\n",
        "return": []
      },
      {
        "name": "getSupportedCoordTypes",
        "desc": "获取支持的坐标系类型",
        "args": [],
        "example": "var types = geolocation.getSupportedCoordTypes()\n",
        "return": [],
        "since": "1050"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.geolocation",
    "moduleVariable": "geolocation",
    "bgRestrictDesc": "manifest 中申请后可用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "桌面图标 shortcut",
    "href": "https://doc.quickapp.cn/features/system/shortcut.html",
    "methods": [
      {
        "name": "hasInstalled",
        "desc": "获取桌面图标是否创建",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。参数：true 已创建，false 未创建",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "shortcut.hasInstalled({\n  success: function() {\n    console.log('handling success')\n  }\n})\n",
        "return": []
      },
      {
        "name": "install",
        "desc": "创建桌面图标，每次创建都需要用户授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "message",
                "type": "String",
                "desc": "权限弹窗上的说明文字，用于向用户解释为什么要创建桌面图标",
                "since": "1030",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "创建成功",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "创建失败",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "shortcut.systemPromptEnabled = false\nlet enabled = shortcut.systemPromptEnabled\nconsole.log('system prompt enabled: ' + enabled)\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [
      {
        "name": "systemPromptEnabled",
        "type": "Boolean",
        "desc": "是否开启系统快捷方式创建弹窗，默认 true。不会持久化，只对当前运行有效",
        "since": "1020",
        "readable": true,
        "writeable": true
      }
    ],
    "moduleName": "system.shortcut",
    "moduleVariable": "shortcut",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "日历事件 calendar",
    "href": "https://doc.quickapp.cn/features/system/calendar.html",
    "methods": [
      {
        "name": "insert",
        "desc": "插入日历事件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "title",
                "type": "String",
                "desc": "事件的标题",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "description",
                "type": "String",
                "desc": "事件的描述",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "startDate",
                "type": "long",
                "desc": "事件开始时间，以从公元纪年开始计算的协调世界时毫秒数表示",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "endDate",
                "type": "long",
                "desc": "事件结束时间，以从公元纪年开始计算的协调世界时毫秒数表示",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "timezone",
                "type": "String",
                "desc": "事件的时区",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "allDay",
                "type": "boolean",
                "desc": "true 表示此事件占用一整天（按照本地时区的定义）。 false 表示它是常规事件，可在一天内的任何时间开始和结束",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "rrule",
                "type": "String",
                "desc": "事件的重复发生规则格式。例如，\"FREQ=WEEKLY;COUNT=10;WKST=SU\"。 您可以在此处找到更多示例",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "remindMinutes",
                "type": "Array",
                "desc": "在事件开始前几分钟进行提醒。例如：[5,15,30]",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "organizer",
                "type": "String",
                "desc": "事件组织者（所有者）的电子邮件",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，值为插入成功的 id",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "calendar.insert({\n  title: '事件Ａ',\n  startDate: '1490770543000',\n  endDate: '1490880543000',\n  remindMinutes: [5, 15, 30],\n  duration: 'PT1H',\n  rrule: 'FREQ=WEEKLY;COUNT=２',\n  success: function(data) {\n    console.log('handling success')\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.calendar",
    "moduleVariable": "calendar",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "网络状态 network",
    "href": "https://doc.quickapp.cn/features/system/network.html",
    "methods": [
      {
        "name": "getType",
        "desc": "获取网络类型",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "metered",
                    "type": "Boolean",
                    "desc": "是否按照流量计费",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "type",
                    "type": "String",
                    "desc": "网络类型，可能的值为 2g，3g，4g，wifi，none",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，可能是因为缺乏权限",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "network.getType({\n  success: function(data) {\n    console.log(`handling success: ${data.type}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "subscribe",
        "desc": "监听网络连接状态。如果多次调用，仅最后一次调用生效",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "reserved",
                "type": "Boolean",
                "desc": "是否持久化订阅，默认为 false。机制：设置为 true，页面跳转，不会自动取消订阅，需手动取消订阅",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "每次网络发生变化，都会被回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "metered",
                    "type": "Boolean",
                    "desc": "是否按照流量计费",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "type",
                    "type": "String",
                    "desc": "网络类型，可能的值为 2g，3g，4g，wifi，none",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，可能是因为缺乏权限",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "network.subscribe({\n  callback: function(data) {\n    console.log('handling callback')\n  }\n})\n",
        "return": []
      },
      {
        "name": "unsubscribe",
        "desc": "取消监听网络连接状态",
        "args": [],
        "example": "network.unsubscribe()\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.network",
    "moduleVariable": "network",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "设备信息 device",
    "href": "https://doc.quickapp.cn/features/system/device.html",
    "methods": [
      {
        "name": "getInfo",
        "desc": "获取设备信息",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "brand",
                    "type": "String",
                    "desc": "设备品牌",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "manufacturer",
                    "type": "String",
                    "desc": "设备生产商",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "model",
                    "type": "String",
                    "desc": "设备型号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "product",
                    "type": "String",
                    "desc": "设备代号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "osType",
                    "type": "String",
                    "desc": "操作系统名称",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "osVersionName",
                    "type": "String",
                    "desc": "操作系统版本名称",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "osVersionCode",
                    "type": "Integer",
                    "desc": "操作系统版本号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "platformVersionName",
                    "type": "String",
                    "desc": "运行平台版本名称",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "platformVersionCode",
                    "type": "Integer",
                    "desc": "运行平台版本号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "language",
                    "type": "String",
                    "desc": "系统语言",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "region",
                    "type": "String",
                    "desc": "系统地区",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "screenWidth",
                    "type": "Integer",
                    "desc": "屏幕宽",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "screenHeight",
                    "type": "Integer",
                    "desc": "屏幕高",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "windowWidth",
                    "type": "Integer",
                    "desc": "可使用窗口宽度",
                    "since": "1030",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "windowHeight",
                    "type": "Integer",
                    "desc": "可使用窗口高度",
                    "since": "1030",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "statusBarHeight",
                    "type": "Integer",
                    "desc": "状态栏高度",
                    "since": "1030",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "screenDensity",
                    "type": "Float",
                    "desc": "设备的屏幕密度",
                    "since": "1040",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "device.getInfo({\n  success: function(ret) {\n    console.log(`handling success， brand = ${ret.brand}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getId",
        "desc": "批量获取设备标识，需要用户授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "type",
                "type": "Array",
                "desc": "支持 device、mac、user、advertising 1000+四种类型，可提供一至多个",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "device",
                    "type": "String",
                    "desc": "设备唯一标识。在 Android 上返回 IMEI 或 MEID; 在Android Q之后，除了华为手机返回aaid(应用匿名设备标识符)，其他厂商手机如果支持oaid（匿名设备标识符）则返回oaid，否则返回空值。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "mac",
                    "type": "String",
                    "desc": "设备的 mac 地址。在 Android M 及以上返回固定值：02:00:00:00:00:00",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "user",
                    "type": "String",
                    "desc": "用户唯一标识。在 Android 上返回 androidid",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "advertising",
                    "type": "String",
                    "desc": "广告唯一标识",
                    "since": "1000",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "device.getId({\n  type: ['device', 'mac'],\n  success: function(data) {\n    console.log(`handling success: ${data.device}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getDeviceId",
        "desc": "获取设备唯一标识。需要用户授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "deviceId",
                    "type": "String",
                    "desc": "设备唯一标识。在 Android 上返回 IMEI 或 MEID; 在Android Q之后，除了华为手机返回aaid(应用匿名设备标识符)，其他厂商手机如果支持oaid（匿名设备标识符）则返回oaid，否则返回空值。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getUserId",
        "desc": "获取用户唯一标识",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "userId",
                    "type": "String",
                    "desc": "设备唯一标识。在 Android 上返回 androidid",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getAdvertisingId",
        "desc": "获取广告唯一标识",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "advertisingId",
                    "type": "String",
                    "desc": "广告唯一标识",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getSerial",
        "desc": "获取设备序列号",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "serial",
                    "type": "String",
                    "desc": "设备序列号",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1040"
      },
      {
        "name": "getTotalStorage",
        "desc": "获取存储空间的总大小",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "totalStorage",
                    "type": "Long",
                    "desc": "存储空间的总大小，单位是 Byte。在 Android 上返回的是外部存储的总大小",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getAvailableStorage",
        "desc": "获取存储空间的可用大小",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "availableStorage",
                    "type": "Long",
                    "desc": "存储空间的可用大小，单位是 Byte。在 Android 上返回的是外部存储的可用大小",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getCpuInfo",
        "desc": "返回 CPU 信息",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "cpuInfo",
                    "type": "String",
                    "desc": "CPU 信息。在 Android 上返回的是/proc/cpuinfo 文件的内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1000"
      },
      {
        "name": "getOAID",
        "desc": "返回厂商设备标识符中的OAID（匿名设备标识符）",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "oaid",
                    "type": "String",
                    "desc": "oaid的值,如果当前手机还不支持oaid，返回空值",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "var device = require('@system.device')\nvar allowTrackOAID = device.allowTrackOAID\n",
        "return": [
          {
            "name": "versionName",
            "type": "String",
            "desc": "运行平台版本名称",
            "since": "",
            "attributes": []
          },
          {
            "name": "versionCode",
            "type": "Integer",
            "desc": "运行平台版本号",
            "since": "",
            "attributes": []
          }
        ],
        "since": "1060"
      }
    ],
    "listeners": [],
    "attributes": [
      {
        "name": "allowTrackOAID",
        "type": "Boolean",
        "desc": "限制oaid以及android q以上的deviceId是否可以用于广告跟踪",
        "since": "",
        "readable": true,
        "writeable": false
      }
    ],
    "moduleName": "system.device",
    "moduleVariable": "device",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "屏幕亮度 brightness",
    "href": "https://doc.quickapp.cn/features/system/brightness.html",
    "methods": [
      {
        "name": "getValue",
        "desc": "获得当前屏幕亮度值",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "value",
                    "type": "Integer",
                    "desc": "屏幕亮度，取值范围 0-255",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "brightness.getValue({\n  success: function(data) {\n    console.log(`handling success, value = ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "setValue",
        "desc": "设置当前屏幕亮度值",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "value",
                "type": "Integer",
                "desc": "屏幕亮度，取值范围 0-255",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "brightness.setValue({\n  value: 100,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getMode",
        "desc": "获得当前屏幕亮度模式",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "mode",
                    "type": "Integer",
                    "desc": "0 为手动调节屏幕亮度,1 为自动调节屏幕亮度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "brightness.getMode({\n  success: function(data) {\n    console.log(`handling success, mode = ${data.mode}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "setMode",
        "desc": "设置当前屏幕亮度模式",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "mode",
                "type": "Integer",
                "desc": "0 为手动调节屏幕亮度,1 为自动调节屏幕亮度",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "brightness.setMode({\n  mode: 1,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "setKeepScreenOn",
        "desc": "设置是否保持常亮状态",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "keepScreenOn",
                "type": "Boolean",
                "desc": "是否保持屏幕常亮",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "brightness.setKeepScreenOn({\n  keepScreenOn: true,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1060"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.brightness",
    "moduleVariable": "brightness",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "系统音量 volume",
    "href": "https://doc.quickapp.cn/features/system/volume.html",
    "methods": [
      {
        "name": "getMediaValue",
        "desc": "获取当前多媒体音量。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "value",
                    "type": "Number",
                    "desc": "系统媒体当前音量，0.0-1.0 之间。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "volume.getMediaValue({\n  success: function(data) {\n    console.log(`handling success: ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "setMediaValue",
        "desc": "设置当前多媒体音量。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "value",
                "type": "Number",
                "desc": "设置的音量，0.0-1.0 之间。",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "volume.setMediaValue({\n  value: 0.5,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.volume",
    "moduleVariable": "volume",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "电量信息 battery",
    "href": "https://doc.quickapp.cn/features/system/battery.html",
    "methods": [
      {
        "name": "getStatus",
        "desc": "获取当前设备的电量信息。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "charging",
                    "type": "Boolean",
                    "desc": "是否正在充电",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "level",
                    "type": "Number",
                    "desc": "当前电量，0.0 - 1.0 之间",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "battery.getStatus({\n  success: function(data) {\n    console.log(`handling success: ${data.level}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.battery",
    "moduleVariable": "battery",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "应用管理 package",
    "href": "https://doc.quickapp.cn/features/system/package.html",
    "methods": [
      {
        "name": "hasInstalled",
        "desc": "检测应用是否存在。支持检测原生应用是否已安装。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "package",
                "type": "String",
                "desc": "应用包名",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "result",
                    "type": "Boolean",
                    "desc": "应用是否存在",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "pkg.hasInstalled({\n  package: 'com.hap.app',\n  success: function(data) {\n    console.log(`handling success: ${data.result}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "install",
        "desc": "安装应用。支持安装原生应用。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "package",
                "type": "String",
                "desc": "应用包名",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "result",
                    "type": "Boolean",
                    "desc": "是否成功发起安装操作",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "pkg.install({\n  package: 'com.hap.app',\n  success: function(data) {\n    console.log(`handling success: ${data.result}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.package",
    "moduleVariable": "pkg",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "录音 record",
    "href": "https://doc.quickapp.cn/features/system/record.html",
    "methods": [
      {
        "name": "start",
        "desc": "开始录音。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "duration",
                "type": "Number",
                "desc": "录音时长，单位为 ms。如果 duration 为有效值将在达到指定值时停止录音",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "sampleRate",
                "type": "Number",
                "desc": "采样率。不同的音频格式所支持的采样率范围不同。对于 aac 格式，默认设置为 8000，建议使用 8000/16000/44100",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "numberOfChannels",
                "type": "Number",
                "desc": "录音通道数，有效值 1/2",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "encodeBitRate",
                "type": "Number",
                "desc": "编码码率。编码码率的取值与采样率和音频格式有关。对 aac 格式，建议按照下表中取值范围来选择编码码率",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "format",
                "type": "String",
                "desc": "音频格式，有效值 3gpp/amr_nb/aac。缺省为 3gpp",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "录音文件的存储路径，在应用的缓存目录中",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "record.start({\n  duration: 10000,\n  sampleRate: 8000,\n  numberOfChannels: 1,\n  encodeBitRate: 16000,\n  format: 'aac',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "stop",
        "desc": "停止录音。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": []
          }
        ],
        "example": "record.stop()\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.record",
    "moduleVariable": "record",
    "bgRestrictDesc": "manifest 中申请后可用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "联系人 contact",
    "href": "https://doc.quickapp.cn/features/system/contact.html",
    "methods": [
      {
        "name": "pick",
        "desc": "选择联系人",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "displayName",
                    "type": "String",
                    "desc": "联系人名称",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "number",
                    "type": "String",
                    "desc": "电话号码",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "contact.pick({\n  success: function(data) {\n    console.log('contact: name=' + data.displayName + ', number=' + data.number)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n",
        "return": []
      },
      {
        "name": "list",
        "desc": "获取通讯录所有联系人列表，每次获取都需要用户授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "contactList",
                    "type": "Array",
                    "desc": "联系人列表",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "displayName",
                "type": "String",
                "desc": "联系人名称",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "number",
                "type": "String",
                "desc": "电话号码",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "contact.list({\n  success: function(data) {\n    for (const i in data.contactList) {\n      console.log(\n        `name: ${data.contactList[i].displayName},number:${\n          data.contactList[i].number\n        }`\n      )\n    }\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n",
        "return": [],
        "since": "1050"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.contact",
    "moduleVariable": "contact",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "发送短信 sms",
    "href": "https://doc.quickapp.cn/features/system/sms.html",
    "methods": [
      {
        "name": "send",
        "desc": "发送短信，每次发送都需要用户授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "address",
                "type": "String",
                "desc": "目标号码",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "content",
                "type": "String",
                "desc": "短信内容（不可超过 70 字符）",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "sms.send({\n  address：'123456',\n  content：'这是短信内容',\n  success: function () {\n    console.log('handling success')\n  },\n  fail: function (data, code) {\n    console.log(\"handling fail, code=\" + code);\n  }\n})\n",
        "return": []
      },
      {
        "name": "readSafely",
        "desc": "获取手机短信内容，用于获取手机验证码等场景（仅允许获取 5 分钟内的应用短信）。 安全性：短信中通过增加应用签名 hash 信息，接口获取短信时通过 hash 来验证区分该应用的短信内容。 短信格式：11 位签名 hash 字符放到短信末尾，可通过 Debugger 工具获取。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "timeout",
                "type": "Long",
                "desc": "超时时间，单位是 ms，默认值为 60000（一分钟）",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "message",
                    "type": "String",
                    "desc": "原始短信内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": [],
        "since": "1050"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.sms",
    "moduleVariable": "sms",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "Wi-Fi wifi",
    "href": "https://doc.quickapp.cn/features/system/wifi.html",
    "methods": [
      {
        "name": "connect",
        "desc": "连接 Wi-Fi。若已知 Wi-Fi 信息，可以直接利用该接口连接。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "SSID",
                "type": "String",
                "desc": "Wi-Fi 设备的 SSID",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "BSSID",
                "type": "String",
                "desc": "Wi-Fi 设备的 BSSID",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "password",
                "type": "String",
                "desc": "Wi-Fi 设备密码",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，此时 Wi-Fi 已经成功连接上",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "wifi.connect({\n  SSID: '',\n  BSSID: '',\n  success: function() {\n    console.log('connect wifi success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "scan",
        "desc": "请求获取 Wi-Fi 列表，在 onscanned 事件中返回 Wi-Fi 列表数据。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "扫描请求发起成功",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "扫描请求发起失败",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "wifi.scan({\n  success: function() {\n    console.log('scan success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getConnectedWifi",
        "desc": "获取已连接中的 Wi-Fi 信息",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "SSID",
                    "type": "String",
                    "desc": "Wi-Fi 的 SSID",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "BSSID",
                    "type": "String",
                    "desc": "Wi-Fi 的 BSSID",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "secure",
                    "type": "Boolean",
                    "desc": "Wi-Fi 是否安全",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "signalStrength",
                    "type": "Number",
                    "desc": "Wi-Fi 信号强度",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "wifi.onstatechanged = function(data) {\n  console.log(`handling wifi state changed: ${data.state}`)\n}\n",
        "return": []
      }
    ],
    "listeners": [
      {
        "name": "onscanned",
        "desc": "监听在获取到 Wi-Fi 列表数据时的事件，在回调中将返回 wifiList。",
        "args": [
          {
            "name": "data",
            "desc": "",
            "type": "",
            "attributes": [
              {
                "name": "wifiList",
                "type": "Array",
                "desc": "Wi-Fi 列表数据",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": ""
      }
    ],
    "attributes": [],
    "moduleName": "system.wifi",
    "moduleVariable": "wifi",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "蓝牙 bluetooth",
    "href": "https://doc.quickapp.cn/features/system/bluetooth.html",
    "methods": [
      {
        "name": "openAdapter",
        "desc": "初始化蓝牙模块",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "operateAdapter",
                "type": "Boolean",
                "desc": "是否打开系统蓝牙开关。设置为 true，在系统蓝牙开关关闭的情况下会弹框提示是否打开。默认值 false。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.openAdapter({\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "closeAdapter",
        "desc": "关闭蓝牙模块。调用该方法将断开所有已建立的连接并释放系统资源。建议在使用蓝牙流程后，与 bluetooth.openAdapter 成对调用。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "operateAdapter",
                "type": "Boolean",
                "desc": "是否关闭系统蓝牙开关。设置为 true，调用时会关闭系统蓝牙开关。默认值 false。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.closeAdapter({\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "getAdapterState",
        "desc": "获取本机蓝牙适配器状态。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "available",
                    "type": "Boolean",
                    "desc": "蓝牙适配器是否可用",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "discovering",
                    "type": "Boolean",
                    "desc": "是否正在搜索设备",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.onadapterstatechange = function(data) {\n  console.log('adapterState changed, now is', data.available)\n}\n",
        "return": []
      },
      {
        "name": "startDevicesDiscovery",
        "desc": "开始搜寻附近的蓝牙外围设备。此操作比较耗费系统资源，请在搜索并连接到设备后调用 bluetooth.stopDevicesDiscovery 方法停止搜索。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "services",
                "type": "String[]",
                "desc": "要搜索的主 service 的 uuid 列表。某些蓝牙设备会广播自己的主 service 的 uuid。如果设置此参数，则只搜索广播包有对应 uuid 的主服务的蓝牙设备。建议主要通过该参数过滤掉周边不需要处理的其他蓝牙设备。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "allowDuplicatesKey",
                "type": "Boolean",
                "desc": "默认值为 false。是否允许重复上报同一设备。如果允许重复上报，则 bluetooth.ondevicefound 方法会多次上报同一设备，但是 RSSI 值会有不同。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "interval",
                "type": "Number",
                "desc": "单位毫秒，默认值为 0。上报设备的间隔。0 表示找到新设备立即上报，其他数值根据传入的间隔上报。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.startDevicesDiscovery({\n  services: ['FEE7'],\n  success: function() {\n    console.log('success')\n  }\n})\n",
        "return": []
      },
      {
        "name": "stopDevicesDiscovery",
        "desc": "停止搜寻附近的蓝牙外围设备。若已经找到需要的蓝牙设备并不需要继续搜索时，建议调用该接口停止蓝牙搜索。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.stopDevicesDiscovery({\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "getDevices",
        "desc": "获取在蓝牙模块生效期间所有已发现的蓝牙设备。包括已经和本机处于连接状态的设备。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "devices",
                    "type": "Object[]",
                    "desc": "蓝牙模块生效期间已发现的蓝牙设备",
                    "since": "",
                    "required": false,
                    "attributes": [
                      {
                        "name": "name",
                        "type": "String",
                        "desc": "蓝牙设备名称，某些设备可能没有",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "deviceId",
                        "type": "String",
                        "desc": "用于区分设备的 id",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "RSSI",
                        "type": "Number",
                        "desc": "当前蓝牙设备的信号强度",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "advertisData",
                        "type": "ArrayBuffer",
                        "desc": "当前蓝牙设备的广播数据段中的 ManufacturerData 数据段",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "advertisServiceUUIDs",
                        "type": "String[]",
                        "desc": "当前蓝牙设备的广播数据段中的 ServiceUUIDs 数据段",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "localName",
                        "type": "String",
                        "desc": "当前蓝牙设备的广播数据段中的 LocalName 数据段",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "serviceData",
                        "type": "Object",
                        "desc": "当前蓝牙设备的广播数据段中的 ServiceData 数据段，key 为 uuid 的 String 值，value 为对应的 ServiceData 的 ArrayBuffer",
                        "since": "",
                        "required": false,
                        "attributes": []
                      }
                    ]
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "function ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(new Uint8Array(buffer), function(bit) {\n    return ('00' + bit.toString(16)).slice(-2)\n  })\n  return hexArr.join('')\n}\nbluetooth.ondevicefound = function(data) {\n  console.log('new device list has founded')\n  data.devices.forEach(device => {\n    console.log(`handling find new devive:${JSON.stringify(device)}`)\n    console.log(`handling advertisData = ${ab2hex(device.advertisData)}`)\n\n    for (let key in device.serviceData) {\n      console.log(\n        `handling serviceData: uuid = ${key}, serviceData = ${ab2hex(\n          device.serviceData[key]\n        )}`\n      )\n    }\n  })\n}\n",
        "return": []
      },
      {
        "name": "getConnectedDevices",
        "desc": "根据 uuid 获取处于已连接状态的设备。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "devices",
                    "type": "Object[]",
                    "desc": "uuid 对应的的已连接设备列表",
                    "since": "",
                    "required": false,
                    "attributes": [
                      {
                        "name": "name",
                        "type": "String",
                        "desc": "蓝牙设备名称，某些设备可能没有",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "deviceId",
                        "type": "String",
                        "desc": "用于区分设备的 id",
                        "since": "",
                        "required": false,
                        "attributes": []
                      }
                    ]
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "services",
                "type": "String[]",
                "desc": "蓝牙设备主 service 的 uuid 列表",
                "since": "",
                "required": true,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.getConnectedDevices({\n  success: function(data) {\n    console.log(data)\n    if (data.devices[0]) {\n      console.log(data.devices[0].name)\n    }\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "createBLEConnection",
        "desc": "连接低功耗蓝牙设备。若快应用有搜索过某个蓝牙设备，并成功建立连接，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需进行搜索操作。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "用于区分设备的 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "timeout",
                "type": "Number",
                "desc": "超时时间，单位 ms，不填表示不会超时",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.createBLEConnection({\n  deviceId: deviceId,\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "closeBLEConnection",
        "desc": "断开与低功耗蓝牙设备的连接。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "用于区分设备的 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.closeBLEConnection({\n  deviceId: deviceId,\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "getBLEDeviceServices",
        "desc": "获取蓝牙设备所有服务(service)。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "services",
                    "type": "Object[]",
                    "desc": "设备服务列表",
                    "since": "",
                    "required": false,
                    "attributes": [
                      {
                        "name": "uuid",
                        "type": "String",
                        "desc": "蓝牙设备服务的 uuid",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "isPrimary",
                        "type": "Boolean",
                        "desc": "该服务是否为主服务",
                        "since": "",
                        "required": false,
                        "attributes": []
                      }
                    ]
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.getBLEDeviceServices({\n  deviceId: deviceId,\n  success: function(data) {\n    data.services.forEach(service => {\n      console.log(\n        `handling device services: uuid = ${service.uuid}, isPrimary = ${\n          service.isPrimary\n        }`\n      )\n    })\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "getBLEDeviceCharacteristics",
        "desc": "获取蓝牙设备某个服务中所有特征值(characteristic)。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "characteristics",
                    "type": "Object[]",
                    "desc": "设备服务列表",
                    "since": "",
                    "required": false,
                    "attributes": [
                      {
                        "name": "uuid",
                        "type": "String",
                        "desc": "蓝牙设备特征值的 uuid",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "properties",
                        "type": "Object",
                        "desc": "该特征值支持的操作类型",
                        "since": "",
                        "required": false,
                        "attributes": [
                          {
                            "name": "read",
                            "type": "Boolean",
                            "desc": "该特征值是否支持 read 操作",
                            "since": "",
                            "required": false,
                            "attributes": []
                          },
                          {
                            "name": "write",
                            "type": "Boolean",
                            "desc": "该特征值是否支持 write 操作",
                            "since": "",
                            "required": false,
                            "attributes": []
                          },
                          {
                            "name": "notify",
                            "type": "Boolean",
                            "desc": "该特征值是否支持 notify 操作",
                            "since": "",
                            "required": false,
                            "attributes": []
                          },
                          {
                            "name": "indicate",
                            "type": "Boolean",
                            "desc": "该特征值是否支持 indicate 操作",
                            "since": "",
                            "required": false,
                            "attributes": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "serviceId",
                "type": "String",
                "desc": "蓝牙服务 uuid，需要使用 getBLEDeviceServices 获取",
                "since": "",
                "required": true,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.getBLEDeviceCharacteristics({\n  deviceId: deviceId,\n  serviceId: serviceId,\n  success: function(data) {\n    data.characteristics.forEach(characteristic => {\n      console.log(\n        `handling device characteristic : uuid = ${\n          characteristic.uuid\n        }, can read = ${characteristic.properties.read}`\n      )\n    })\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "readBLECharacteristicValue",
        "desc": "读取低功耗蓝牙设备的特征值的二进制数据值。注意：必须设备的特征值支持 read 才可以成功调用。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "serviceId",
                "type": "String",
                "desc": "蓝牙特征值对应服务的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "characteristicId",
                "type": "String",
                "desc": "蓝牙特征值的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.readBLECharacteristicValue({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId: deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId: serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId: characteristicId,\n  success: function() {\n    // 执行操作成功，读取的值会在onblecharacteristicvaluechange 接口中上报\n    console.log('success')\n  }\n})\n",
        "return": []
      },
      {
        "name": "writeBLECharacteristicValue",
        "desc": "向低功耗蓝牙设备特征值中写入二进制数据。注意：必须设备的特征值支持 write 才可以成功调用。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "serviceId",
                "type": "String",
                "desc": "蓝牙特征值对应服务的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "characteristicId",
                "type": "String",
                "desc": "蓝牙特征值的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "value",
                "type": "ArrayBuffer",
                "desc": "蓝牙设备特征值对应的二进制值",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.writeBLECharacteristicValue({\n  // 这里的 deviceId 需要在 getBluetoothDevices 或 onBluetoothDeviceFound接口中获取\n  deviceId: deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId: serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId: characteristicId,\n  // 这里的value是ArrayBuffer类型\n  value: buffer,\n  success: function() {\n    console.log('success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n  complete: function() {\n    console.log('complete')\n  }\n})\n",
        "return": []
      },
      {
        "name": "notifyBLECharacteristicValueChange",
        "desc": "启用低功耗蓝牙设备特征值变化时的 notify 功能，订阅特征值。注意：必须设备的特征值支持 notify 或者 indicate 才可以成功调用。另外，必须先启用 notifyBLECharacteristicValueChange 才能监听到设备 characteristicValueChange 事件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "serviceId",
                "type": "String",
                "desc": "蓝牙特征值对应服务的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "characteristicId",
                "type": "String",
                "desc": "蓝牙特征值的 uuid",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "state",
                "type": "Boolean",
                "desc": "是否启用 notify",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调。",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "bluetooth.onbleconnectionstatechange = function(data) {\n  console.log(\n    `handling device state change: deviceId = ${data.deviceId}, connected = ${\n      data.connected\n    }`\n  )\n}\n",
        "return": []
      }
    ],
    "listeners": [
      {
        "name": "onadapterstatechange",
        "desc": "监听蓝牙适配器状态变化事件",
        "args": [
          {
            "name": "data",
            "desc": "",
            "type": "",
            "attributes": [
              {
                "name": "available",
                "type": "Boolean",
                "desc": "蓝牙适配器是否可用",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "discovering",
                "type": "Boolean",
                "desc": "蓝牙适配器是否处于搜索状态",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": ""
      },
      {
        "name": "ondevicefound",
        "desc": "监听寻找到新设备的事件",
        "args": [
          {
            "name": "data",
            "desc": "",
            "type": "",
            "attributes": [
              {
                "name": "devices",
                "type": "Object[]",
                "desc": "新搜索到的设备列表，devices 返回值见 getDevices",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": ""
      },
      {
        "name": "onblecharacteristicvaluechange",
        "desc": "监听低功耗蓝牙设备的特征值变化。必须先启用 notifyBLECharacteristicValueChange 接口才能接收到设备推送的 notification。",
        "args": [
          {
            "name": "data",
            "desc": "",
            "type": "",
            "attributes": [
              {
                "name": "deviceId",
                "type": "String",
                "desc": "蓝牙设备 id",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "serviceId",
                "type": "String",
                "desc": "蓝牙特征值对应服务的 uuid",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "characteristicId",
                "type": "String",
                "desc": "蓝牙特征值的 uuid",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "value",
                "type": "ArrayBuffer",
                "desc": "特征值最新的值",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": ""
      }
    ],
    "attributes": [],
    "moduleName": "system.bluetooth",
    "moduleVariable": "bluetooth",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "闹钟 alarm",
    "href": "https://doc.quickapp.cn/features/system/alarm.html",
    "methods": [
      {
        "name": "setAlarm",
        "desc": "设置闹钟，每次添加弹出提示框，同意后调用接口添加。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "hour",
                "type": "Number",
                "desc": "设置起闹小时[0，23]",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "minute",
                "type": "Number",
                "desc": "设置起闹分钟[0，59]",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "message",
                "type": "String",
                "desc": "闹钟名,建议长度不超过 10 字符,以保证最佳显示效果",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "vibrate",
                "type": "Boolean",
                "desc": "是否震动，默认 true",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "days",
                "type": "Array",
                "desc": "重复周期默认是一次性闹钟[0,1,2,3,4,5,6] 每天[0,1,2,3,4]周一到周五[0,6]（0 表示周一 6 表示周日）",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "ringtone",
                "type": "String",
                "desc": "默认铃声随系统，文件路径为数据文件或应用内的资源",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "getProvider",
        "desc": "获取服务提供商",
        "args": [],
        "example": "",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.alarm",
    "moduleVariable": "alarm",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "解压缩 zip",
    "href": "https://doc.quickapp.cn/features/system/zip.html",
    "methods": [
      {
        "name": "decompress",
        "desc": "解压文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "srcUri",
                "type": "String",
                "desc": "源文件的uri，不能是tmp类型的uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "dstUri",
                "type": "String",
                "desc": "目标目录的uri，不能是应用资源路径和tmp类型的uri",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "zip.decompress({\n  srcUri: 'internal://cache/test.zip',\n  dstUri: 'internal://files/unzip/',\n  success: function() {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.zip",
    "moduleVariable": "zip",
    "bgRestrictDesc": ""
  },
  {
    "name": "密码算法 cipher",
    "href": "https://doc.quickapp.cn/features/system/cipher.html",
    "methods": [
      {
        "name": "rsa",
        "desc": "RSA 加解密。不支持分段加密，内容超长会出错",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "action",
                "type": "String",
                "desc": "加解密类型，两个可选值：encrypt：加密，decrypt： 解密",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "text",
                "type": "String",
                "desc": "待加密或解密的文本内容。待加密的文本内容应该是一段普通文本，长度不能超过 keySize / 8 - 66，其中 keySize 是秘钥的长度（例如秘钥长度为 1024 时，text 不能超过 62 个字节）。待解密的文本内容应该是经过 base64 编码的一段二进制值。base64 编码使用默认风格，下同",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "加密或解密使用到的 RSA 密钥，经过 base64 编码后生成的字符串。加密时 key 为公钥，解密时 key 为私钥",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "transformation",
                "type": "String",
                "desc": "RSA 算法的填充项，默认为\"RSA/None/OAEPwithSHA-256andMGF1Padding\"",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "text",
                    "type": "String",
                    "desc": "经过加密或解密后生成的文本内容。加密后内容是经过 base64 编码的一段二进制值，解密后内容是一段普通文本。如果解密后的内容不能转化为 utf-8 字符串会出错",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "//加密\ncipher.rsa({\n  action: 'encrypt',\n  //待加密的文本内容\n  text: 'hello',\n  //base64编码后的加密公钥\n  key:\n    'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDc7GR2MrfAoefES+wrs1ns2afT\\n' +\n    'eJXSfIkEHfPXG9fVFjaws1ho4KcZfsxlA0+SXvc83f2SVGCuzULmM2lxxRCtcUN/\\n' +\n    'h7SoaYEeluhqFimL2AEjfSwINHCLqObJkcjCfoZpE1JCehPiDOJsyT50Auc08h/4\\n' +\n    'jHQfanyC1nc62LqUCQIDAQAB',\n  success: function(data) {\n    console.log(`handling success: ${data.text}`)\n  },\n  fail: function(data, code) {\n    console.log(`### cipher.rsa fail ### ${code}: ${data}`)\n  }\n})\n\n//解密：\ncipher.rsa({\n  action: 'decrypt',\n  //待解密的内容，是base64编码后的一段二进制值，解密后是文本内容“hello”\n  text:\n    'CUg3tTxTIdpCfreIxIBdws3uhd5qXLwcrVl3XDnQzZFVHyjVVCDHS16rjopaZ4C5xU2Tc8mSDzt7\\n' +\n    'gp9vBfSwi7bMtSUvXG18DlncsKJFDkJpS5t0PkpS9YrJXrY80Gpe+ME6+6dN9bjgqMljbitDdBRf\\n' +\n    'S/ZWNI4Q8Q0suNjNkGU=',\n  //base64编码后的解密私钥\n  key:\n    'MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBANzsZHYyt8Ch58RL\\n' +\n    '7CuzWezZp9N4ldJ8iQQd89cb19UWNrCzWGjgpxl+zGUDT5Je9zzd/ZJUYK7NQuYz\\n' +\n    'aXHFEK1xQ3+HtKhpgR6W6GoWKYvYASN9LAg0cIuo5smRyMJ+hmkTUkJ6E+IM4mzJ\\n' +\n    'PnQC5zTyH/iMdB9qfILWdzrYupQJAgMBAAECgYEAkibhH0DWR13U0gvYJeD08Lfd\\n' +\n    'Sw1PMHyquEqIcho9Yv7bF3LOXjOg2EEGPx09mvuwXFgP1Kp1e67XPytr6pQQPzK7\\n' +\n    'XAPcLPx80R/ZjZs8vNFndDOd1HgD3vSVmYQarNzmKi72tOUWMPevsaFXPHo6Xx3X\\n' +\n    '8x0wYb7XuBsQguRctTECQQD7GWX3JUiyo562iVrpTDPOXsrUxmzCrgz2OZildxMd\\n' +\n    'Pp/PkyDrx7mEXTpk4K/XnQJ3GpJNi2iDSxDuPSAeJ/aPAkEA4Tw4+1Z43S/xH3C3\\n' +\n    'nfulYBNyB4si6KEUuC0krcC1pDJ21Gd12efKo5VF8SaJI1ZUQOzguV+dqNsB/JUY\\n' +\n    'OFfX5wJAB1dKv9r7MR3Peg6x9bggm5vx2h6i914XSuuMJupASM6X5X2rrLj+F3yS\\n' +\n    'RHi9K1SPyeOg+1tkBtKfABgRZFBOyQJAbuTivUSe73AqTKuHjB4ZF0ubqgEkJ9sf\\n' +\n    'Q2rekzm9dOFvxjZGPQo1qALX09qATMi1ZN376ukby8ZAnSafLSZ64wJBAM2V37go\\n' +\n    'Sj44HF76ksRow8gecuQm48NCTGAGTicXg8riKog2GC9y8pMNHAezoR9wXJF7kk+k\\n' +\n    'lz5cHyoMZ9mcd30=',\n  success: function(data) {\n    console.log(`handling success: ${data.text}`)\n  },\n  fail: function(data, code) {\n    console.log(`### cipher.rsa fail ### ${code}: ${data}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "aes",
        "desc": "AES 加解密。支持分段加密",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "action",
                "type": "String",
                "desc": "加解密类型，两个可选值：encrypt：加密，decrypt： 解密",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "text",
                "type": "String",
                "desc": "待加密或解密的文本内容。待加密的文本内容应该是一段普通文本。待解密的文本内容应该是经过 base64 编码的一段二进制值。base64 编码使用默认风格，下同",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "加密或解密使用到的密钥，经过 base64 编码后生成的字符串。",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "transformation",
                "type": "String",
                "desc": "AES 算法的加密模式和填充项，默认为\"AES/CBC/PKCS5Padding\"",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "iv",
                "type": "String",
                "desc": "AES加解密的初始向量，经过base64编码后的字符串，默认值为key值",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "ivOffset",
                "type": "int",
                "desc": "AES加解密的初始向量偏移，默认值为0",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "ivLen",
                "type": "int",
                "desc": "AES加解密的初始向量字节长度，默认值为16",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "text",
                    "type": "String",
                    "desc": "经过加密或解密后生成的文本内容。加密后内容是经过 base64 编码的一段二进制值，解密后内容是一段普通文本。如果解密后的内容不能转化为 utf-8 字符串会出错（CODE：200）",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "//加密\ncipher.aes({\n  action: 'encrypt',\n  //待加密的文本内容\n  text: 'hello',\n  //base64编码后的密钥\n  key: 'NDM5Qjk2UjAzMEE0NzVCRjlFMkQwQkVGOFc1NkM1QkQ=',\n  transformation: 'AES/CBC/PKCS5Padding',\n  ivOffset: 0,\n  ivLen: 16,\n  success: (data) => {\n    console.log(`handling success: ${data.text}`)\n  },\n  fail: (data, code) => {\n    console.log(`### cipher.aes fail ### ${code}: ${data}`)\n  }\n})\n\n//解密：\ncipher.aes({\n  action: 'decrypt',\n  //待解密的内容，是base64编码后的一段二进制值\n  text: 'CUg3tTxTIdpCfreIxIBdws3uhd5qXLwcrVl3XDnQzZFVHyjVVCDHS16rjopaZ4C5xU2Tc8mSDzt7\\n' +\n    'gp9vBfSwi7bMtSUvXG18DlncsKJFDkJpS5t0PkpS9YrJXrY80Gpe+ME6+6dN9bjgqMljbitDdBRf\\n' +\n    'S/ZWNI4Q8Q0suNjNkGU=',\n  //base64编码后的密钥\n  key: 'NDM5Qjk2UjAzMEE0NzVCRjlFMkQwQkVGOFc1NkM1QkQ=',\n  transformation: 'AES/CBC/PKCS5Padding',\n  ivOffset: 0,\n  ivLen: 16,\n  success: (data) => {\n    this.dealTxt = data.text\n  },\n  fail: (data, code) => {\n    prompt.showToast({\n      message: (\"解密失败, code=\" + code + \":\" + data)\n    })\n  }\n})\n",
        "return": [],
        "since": "1060"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.cipher",
    "moduleVariable": "cipher",
    "bgRestrictDesc": "无限制。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "多媒体 media",
    "href": "https://doc.quickapp.cn/features/system/media.html",
    "methods": [
      {
        "name": "takePhoto",
        "desc": "拍摄照片",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "选取的文件路径",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "选取的文件名称",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Number",
                    "desc": "选取的文件大小，单位B",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.takePhoto({\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "takeVideo",
        "desc": "拍摄视频",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调，参数为 {uri: 'file:///video.avi'}",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "选取的文件路径",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "选取的文件名称",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Number",
                    "desc": "选取的文件大小，单位B",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.takeVideo({\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "pickImage",
        "desc": "选择图片",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "选取的文件路径",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "选取的文件名称",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Number",
                    "desc": "选取的文件大小，单位B",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.pickImage({\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "pickImages",
        "desc": "选择多张图片",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uris",
                    "type": "Array",
                    "desc": "选取的文件路径列表",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "files",
                    "type": "Array",
                    "desc": "选取的文件列表，是一个file对象的数组",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.pickImages({\n  success: function(data) {\n    console.log(`handling success: ${data.uris}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      },
      {
        "name": "pickVideo",
        "desc": "选择视频",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "选取的文件路径",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "选取的文件名称",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Number",
                    "desc": "选取的文件大小，单位B",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.pickVideo({\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "pickVideos",
        "desc": "选择多个视频",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uris",
                    "type": "Array",
                    "desc": "选取的文件路径列表",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "files",
                    "type": "Array",
                    "desc": "选取的文件列表，是一个file对象的数组",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.pickVideos({\n  success: function(data) {\n    console.log(`handling success: ${data.uris}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      },
      {
        "name": "pickFile",
        "desc": "选择文件",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "选取的文件路径",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "name",
                    "type": "String",
                    "desc": "选取的文件名称",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Number",
                    "desc": "选取的文件大小，单位B",
                    "since": "1060",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.pickFile({\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "saveToPhotosAlbum",
        "desc": "将图片/视频保存到相册中",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "源文件的 uri，文件的扩展名必须是图片或视频的扩展名",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.saveToPhotosAlbum({\n  uri: 'internal://tmp/abc.jpg',\n  success: function() {\n    console.log(`save success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1010"
      },
      {
        "name": "previewImage",
        "desc": "预览图片，调用之后会在新打开的页面中全屏预览传入的图片，预览的过程中用户可以左右滑动浏览，可以通过双指缩放图片，可以保存图片到相册。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "current",
                "type": "Number 或 String",
                "desc": "数据类型可选择 Number 或者 String：Number：当前显示的图片的下标，默认 0；String：当前显示的图片链接，默认为 uris 中的第一张的地址",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "uris",
                "type": "Array",
                "desc": "需要预览的图片链接列表，同时支持网络和本地地址",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "接口调用成功的回调函数",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "接口调用失败的回调函数",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "接口调用结束的回调函数（调用成功、失败都会执行）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.previewImage({\n  current: 'http://www.xxx.com/a.jpg',\n  uris: [\n    'http://www.xxx.com/a.jpg',\n    'http://www.xxx.com/b.jpg',\n    'http://www.xxx.com/c.jpg'\n  ],\n  success: function() {\n    console.log('preview success')\n  },\n  fail: function(data, code) {\n    console.log('preview fail, code = ${code}')\n  }\n})\n",
        "return": [],
        "since": "1040"
      },
      {
        "name": "getRingtone",
        "desc": "获取系统铃声。如果是获取来电铃声，双卡情况下，获取的是卡 1 对应的铃声。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "type",
                "type": "String",
                "desc": "铃声类型，ringtone：来电，notification：通知，alarm：闹钟",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "title",
                    "type": "String",
                    "desc": "铃声名称，若铃声被删除，返回空字符串。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.getRingtone({\n  type: 'ringtone',\n  success: function(data) {\n    console.log(`get ringtone success title: ${data.title}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      },
      {
        "name": "setRingtone",
        "desc": "设置系统铃声，目前只支持本地文件。如果是设置来电铃声，双卡情况下，卡 1 卡 2 对应的铃声都会设置。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "铃声文件路径，只支持本地文件",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "type",
                "type": "String",
                "desc": "铃声类型，ringtone：来电，notification：通知，alarm：闹钟",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "title",
                "type": "String",
                "desc": "铃声名称，没有设置默认取文件名",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "media.setRingtone({\n  type: 'ringtone',\n  uri: 'internal://mass/test/test.mp3',\n  title: 'test',\n  success: function() {\n    console.log(`set ringtone success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.media",
    "moduleVariable": "media",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "图片编辑 image",
    "href": "https://doc.quickapp.cn/features/system/image.html",
    "methods": [
      {
        "name": "getImageInfo",
        "desc": "获取图片信息",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "图片地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "width",
                    "type": "Integer",
                    "desc": "图片的宽度，单位为 px",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "height",
                    "type": "Integer",
                    "desc": "图片的高度，单位为 px",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "size",
                    "type": "Long",
                    "desc": "图片的大小，单位为 Byte",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.getImageInfo({\n  uri: 'internal://tmp/abc.jpg',\n  success: function(data) {\n    console.log(`handling success: size = ${data.size}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "compressImage",
        "desc": "压缩图片",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "quality",
                "type": "Integer",
                "desc": "图片的压缩质量，0-100 之间，默认是 75",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "ratio",
                "type": "Number",
                "desc": "尺寸压缩倍数，必须大于 0，尺寸会变为原图的 1/ratio 大小",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "format",
                "type": "String",
                "desc": "图片保存格式，支持 JPEG，PNG，WEBP 三种格式。默认使用 JPEG 格式",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "压缩后的图片地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.compressImage({\n  uri: 'internal://tmp/abc.jpg',\n  quality: 80,\n  radio: 2, // 变为原图的1/2大小\n  format: 'JPEG',\n  success: function(data) {\n    console.log(data.uri)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "applyOperations",
        "desc": "对图片按顺序执行编辑操作。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "operations",
                "type": "ObjectArray",
                "desc": "编辑操作列表，按照先后顺序执行。如果未提供，则不会执行编辑操作，仅重新保存图片",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "quality",
                "type": "Integer",
                "desc": "图片的压缩质量，0-100 之间，默认是 75",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "format",
                "type": "String",
                "desc": "图片保存格式，支持 JPEG，PNG，WEBP 三种格式。默认使用 JPEG 格式",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "生成的图片的地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.applyOperations({\n  uri: 'internal://cache/123.png',\n  operations: [\n    {\n      action: 'scale',\n      scaleX: 0.5,\n      scaleY: 0.5\n    },\n    {\n      action: 'crop',\n      width: 200,\n      height: 200\n    },\n    {\n      action: 'rotate',\n      degree: 90\n    }\n  ],\n  quality: 90,\n  format: 'webp',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "editImage",
        "desc": "打开编辑器来编辑图片。目前支持选择图片范围并裁剪。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "aspectRatioX",
                "type": "Integer",
                "desc": "用于限定裁剪结果的宽高比，该参数指定宽高比中宽度比率。例如：aspectRatioX为16，aspectRatioY为9，则限定裁剪结果必须是16:9的图",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "aspectRatioY",
                "type": "Integer",
                "desc": "用于限定裁剪结果的宽高比，该参数指定宽高比中宽度比率。例如：aspectRatioX为16，aspectRatioY为9，则限定裁剪结果必须是16:9的图",
                "since": "1050",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "生成的图片的地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调　　　",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.editImage({\n  uri: 'internal://cache/123.png',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  cancel: function() {\n    console.log('handling cancel')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getExifAttributes",
        "desc": "获取图片的exif信息。支持的格式：JPEG,DNG,CR2,NEF,NRW,ARW,RW2,ORF,PEF,SRW,RAF,HEIF。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "图片地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "attributes",
                    "type": "Object",
                    "desc": "图片的exif信息",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.getExifAttributes({\n  uri: 'internal://cache/123.png',\n  success: function (data) {\n    console.log(`handling success: ${JSON.stringify(data.attributes)}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      },
      {
        "name": "setExifAttributes",
        "desc": "设置图片的exif信息。设置操作会直接在所给图片上进行，不会生成新的图片。支持的格式：JPEG。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "uri",
                "type": "String",
                "desc": "图片地址，可以是数据文件或应用内的资源。如果是应用内资源，必须使用绝对路径",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "attributes",
                "type": "Object",
                "desc": "要设置的exif属性列表　",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "uri",
                    "type": "String",
                    "desc": "图片地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "image.setExifAttributes({\n  uri: 'internal://cache/123.jpg',\n  attributes:{\n     Orientation:'1',\n     Make:'quick app'\n  },\n  success: function (data) {\n    console.log(`handling success`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": [],
        "since": "1040"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "system.image",
    "moduleVariable": "image",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "音频 audio",
    "href": "https://doc.quickapp.cn/features/system/audio.html",
    "methods": [
      {
        "name": "play",
        "desc": "开始播放音频",
        "args": [],
        "example": "audio.play()\n",
        "return": []
      },
      {
        "name": "pause",
        "desc": "暂停播放音频",
        "args": [],
        "example": "audio.pause()\n",
        "return": []
      },
      {
        "name": "stop",
        "desc": "停止音频播放，可以通过 play 重新播放音频",
        "args": [],
        "example": "audio.stop()\n",
        "return": [],
        "since": "1030"
      },
      {
        "name": "getPlayState",
        "desc": "获取当前播放状态数据",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "state",
                    "type": "String",
                    "desc": "播放状态,分别为'play','pause','stop'",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "src",
                    "type": "String",
                    "desc": "当前播放的音频媒体 uri，停止时返回空字符串",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "currentTime",
                    "type": "Number",
                    "desc": "当前音频的当前进度，单位秒,停止时返回-1",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "autoplay",
                    "type": "Boolen",
                    "desc": "当前音频是否在自动播放",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "loop",
                    "type": "Boolen",
                    "desc": "当前音频是否在循环播放",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "volume",
                    "type": "Number",
                    "desc": "当前音频的音量，默认当前系统媒体音量，音量变化范围[0.0,1.0]",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "muted",
                    "type": "Boolen",
                    "desc": "当前音频是否在静音播放",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "notificationVisible",
                    "type": "Boolen",
                    "desc": "当前音频是否正在通知栏中显示音频播放状态",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "let currentTime = audio.currentTime\naudio.currentTime = 5\n",
        "return": [],
        "since": "1050"
      },
      {
        "name": "play",
        "desc": "",
        "args": [],
        "example": "audio.ontimeupdate = function() {\n  console.log(`audio current time: ${audio.currentTime}`)\n}\naudio.ontimeupdate = null\naudio.onprevious = function() {\n  audio.src = \"uri\";\n  audio.tilte=\"上一首歌名\";\n  audio.play();\n};\n",
        "return": []
      }
    ],
    "listeners": [
      {
        "name": "play",
        "desc": "在调用 play 方法后或者 autoplay 为 true 时的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "pause",
        "desc": "在调用 pause 方法后的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "stop",
        "desc": "在调用 stop 方法后的回调事件",
        "since": "1030",
        "example": "",
        "args": []
      },
      {
        "name": "loadeddata",
        "desc": "第一次获取到音频数据的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "ended",
        "desc": "播放结束时的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "durationchange",
        "desc": "播放时长变化时的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "error",
        "desc": "播放发生错误时的回调事件",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "timeupdate",
        "desc": "播放进度变化时触发，触发频率 4HZ",
        "since": "",
        "example": "",
        "args": []
      },
      {
        "name": "previous",
        "desc": "通知栏点击上一首按钮时触发",
        "since": "1040",
        "example": "",
        "args": []
      },
      {
        "name": "next",
        "desc": "通知栏点击下一首按钮时触发",
        "since": "1040",
        "example": "",
        "args": []
      }
    ],
    "attributes": [],
    "moduleName": "system.audio",
    "moduleVariable": "audio",
    "bgRestrictDesc": "manifest 中申请后可用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "推送 push",
    "href": "https://doc.quickapp.cn/features/service/push.html",
    "methods": [
      {
        "name": "getProvider",
        "desc": "获取服务提供商。",
        "args": [],
        "example": "console.log(push.getProvider())\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "subscribe",
        "desc": "订阅 push，后续可以收到 push 消息（一般可在应用初始化的地方进行调用。比如在 app 的 onCreate 方法中调用。）",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "regId",
                    "type": "String",
                    "desc": "PushService 返回的注册 id，可用于针对某个用户发送消息",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，返回失败原因",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "push.subscribe({\n  success: function(data) {\n    console.log(\n      `push.subscribe succeeded, result data = ${JSON.stringify(data)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(\n      `push.subscribe failed, result data = ${JSON.stringify(\n        data\n      )}, code = ${code}`\n    )\n  },\n  complete: function() {\n    console.log('push.subscribe completed')\n  }\n})\n",
        "return": []
      },
      {
        "name": "unsubscribe",
        "desc": "取消订阅（一般不建议调用，调用后 regId 失效，需要重新订阅获取新的 regId）",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，返回失败原因",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "push.unsubscribe({\n  success: function(data) {\n    console.log(\n      `push.unsubscribe succeeded, result data = ${JSON.stringify(data)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(\n      `push.unsubscribe failed, result data = ${JSON.stringify(\n        data\n      )}, code = ${code}`\n    )\n  },\n  complete: function() {\n    console.log('push.unsubscribe completed')\n  }\n})\n",
        "return": []
      },
      {
        "name": "on",
        "desc": "添加 push 事件回调（透传消息的 payload 内容可在此回调中收到）",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "callback",
                "type": "Function",
                "desc": "push 事件回调处理",
                "since": "",
                "required": true,
                "attributes": [
                  {
                    "name": "messageId",
                    "type": "String",
                    "desc": "消息 id",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "data",
                    "type": "String",
                    "desc": "消息内容 payload",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              }
            ]
          }
        ],
        "example": "push.on({\n  callback: function(ret) {\n    console.log(`received pass through message, ret = ${JSON.stringify(ret)}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "off",
        "desc": "移除 push 事件回调，push.on中的callback不会再收到透传内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": []
          }
        ],
        "example": "push.off()\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.push",
    "moduleVariable": "push",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "支付 pay",
    "href": "https://doc.quickapp.cn/features/service/pay.html",
    "methods": [
      {
        "name": "getProvider",
        "desc": "获取服务提供商。",
        "args": [],
        "example": "console.log(pay.getProvider())\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "pay",
        "desc": "使用支付完成付款",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "orderInfo",
                "type": "String",
                "desc": "订单信息",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "code",
                    "type": "Integer",
                    "desc": "返回状态码",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "message",
                    "type": "String",
                    "desc": "消息内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "result",
                    "type": "String",
                    "desc": "支付结果",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "code",
                    "type": "Integer",
                    "desc": "返回状态码",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "message",
                    "type": "String",
                    "desc": "消息内容",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "pay.pay({\n  orderInfo: 'order1',\n  success: function(data) {\n    console.log(`handling success: ${data.code}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.pay",
    "moduleVariable": "pay",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "统计 stats",
    "href": "https://doc.quickapp.cn/features/service/stats.html",
    "methods": [
      {
        "name": "getProvider",
        "desc": "获取服务提供商。",
        "args": [],
        "example": "console.log(stats.getProvider())\n",
        "return": []
      },
      {
        "name": "recordCountEvent",
        "desc": "计数类型事件。通常用来描述⼀个事件累积发⽣的次数，适用的场景如按钮点击、界面进入、用户输入等。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "category",
                "type": "String",
                "desc": "定义事件的类别.开发者可使用该参数对⾃定义打点做整理归类",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "定义事件的主键，作为该事件的唯⼀标识",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "map",
                "type": "Object",
                "desc": "定义事件的属性和取值（Key-Value 键值对）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "stats.recordCountEvent({\n  category: 'Button_Click',\n  key: 'Button_OK_click',\n  map: {\n    param1: 'value1'\n  }\n})\n",
        "return": []
      },
      {
        "name": "recordCalculateEvent",
        "desc": "计算类型事件。用通常用来描述⼀个带数值的事件的发⽣，适用的场景如用户消费事件，附带的数值是每次消费的⾦额；下载⽂件事件，附带的数值是每次下载消耗的时间等。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "category",
                "type": "String",
                "desc": "定义事件的类别.开发者可使用该参数对⾃定义打点做整理归类",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "key",
                "type": "String",
                "desc": "定义事件的主键，作为该事件的唯⼀标识",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "value",
                "type": "Number",
                "desc": "定义事件的值。　　　　　　　　　　　　　　",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "map",
                "type": "Object",
                "desc": "定义事件的属性和取值（Key-Value 键值对）",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "stats.recordCalculateEvent({\n  category: 'user_pay',\n  key: 'buy_ebook',\n  value: 20,\n  map: {\n    param1: 'value1'\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.stats",
    "moduleVariable": "stats",
    "bgRestrictDesc": "无限制。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "账号 account",
    "href": "https://doc.quickapp.cn/features/service/account.html",
    "methods": [
      {
        "name": "getProvider",
        "desc": "获取服务提供商。",
        "args": [],
        "example": "console.log(account.getProvider())\n",
        "return": []
      },
      {
        "name": "isLogin",
        "desc": "判断账户登录状态。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "isLogin",
                    "type": "Boolean",
                    "desc": "登录状态值。true表示已登录，false表示未登录",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "account.isLogin({\n  success: function (data) {\n    console.log('data.isLogin=' + data.isLogin)\n    console.log('handling success' + JSON.stringify(data))\n  }\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n});\n",
        "return": [],
        "since": "1060"
      },
      {
        "name": "authorize",
        "desc": "进行 OAuth 授权。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "type",
                "type": "String",
                "desc": "授权码模式为 code，简化模式为 token。",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "redirectUri",
                "type": "Uri",
                "desc": "重定向 URI。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "scope",
                "type": "String",
                "desc": "申请的权限范围，目前只支持一种 scope，假如不填则 getProfile 只返回 openId。 scope.baseProfile：获取用户基本信息。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "state",
                "type": "String",
                "desc": "可以指定任意值，认证服务器会原封不动地返回这个值。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "state",
                    "type": "String",
                    "desc": "请求时同字段指定的任意值。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "code",
                    "type": "String",
                    "desc": "授权码模式下可用，返回的授权码。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "accessToken",
                    "type": "String",
                    "desc": "简化模式下可用，返回的访问令牌。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "tokenType",
                    "type": "String",
                    "desc": "简化模式下可用，访问令牌类型。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "expiresIn",
                    "type": "Number",
                    "desc": "简化模式下可用，访问令牌过期时间，单位为秒，如果通过其他方式设置，则此处可能为空。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "scope",
                    "type": "String",
                    "desc": "简化模式下可用，实际权限范围，如果与申请一致，则此处可能为空。",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "account.authorize({\n  type: 'code',\n  redirectUri: 'http://www.example.com/',\n  success: function(data) {\n    console.log(`handling success: ${data.code}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getProfile",
        "desc": "获得用户基本信息。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "token",
                "type": "String",
                "desc": "访问令牌",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "openid",
                    "type": "String",
                    "desc": "用户的 openid，可能为空",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "id",
                    "type": "String",
                    "desc": "用户的 user id，可能为空",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "unionid",
                    "type": "String",
                    "desc": "用户在开放平台上的唯一标示符，本字段在满足一定条件下才会返回（需要在厂商的开放平台上额外申请）",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "nickname",
                    "type": "String",
                    "desc": "用户的昵称，可能为空",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "avatar",
                    "type": "Object",
                    "desc": "用户的头像图片地址，可能为空，按照分辨率组织，当只有一个分辨率时，可以使用 default 对应的图片地址",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，返回失败原因",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "account.getProfile({\n  token: 'abcdefg',\n  success: function(data) {\n    console.log(`handling success: ${data.nickname}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.account",
    "moduleVariable": "account",
    "bgRestrictDesc": "禁止使用。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "健康 health",
    "href": "https://doc.quickapp.cn/features/service/health.html",
    "methods": [
      {
        "name": "hasStepsOfDay",
        "desc": "是否支持提供每日步数的功能。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "health.hasStepsOfDay({\n  success: function(data) {\n    console.log(`handling success support：${data.support}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail!, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getTodaySteps",
        "desc": "获取每个自然日的步数，返回的是调用接口时，用户今天已经累计的步数。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "steps",
                    "type": "Number",
                    "desc": "返回当天步数",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "health.getTodaySteps({\n  success: function(data) {\n    console.log(`handling success steps${data.steps}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail!, code = ${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getLastWeekSteps",
        "desc": "获取最近七个自然日每天的步数，包括今天。",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "stepsList",
                    "type": "Array",
                    "desc": "最近七天步数列表数据",
                    "since": "",
                    "required": false,
                    "attributes": [
                      {
                        "name": "date",
                        "type": "String",
                        "desc": "日期(2019-04-08)",
                        "since": "",
                        "required": false,
                        "attributes": []
                      },
                      {
                        "name": "steps",
                        "type": "Number",
                        "desc": "日期对应的步数",
                        "since": "",
                        "required": false,
                        "attributes": []
                      }
                    ]
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "health.getLastWeekSteps({\n  success: function(data) {\n    for (const i in data.stepsList) {\n      console.log(\n        `handling success date: ${data.stepsList[i].date} steps: ${\n          data.stepsList[i].steps\n        }`\n      )\n    }\n  },\n  fail: function(data, code) {\n    console.log(`handling fail!, code = ${code}`)\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.health",
    "moduleVariable": "health",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "微信支付 wxpay",
    "href": "https://doc.quickapp.cn/features/service/wxpay.html",
    "methods": [
      {
        "name": "getType",
        "desc": "获取当前可用的微信支付调用方式",
        "args": [],
        "example": "",
        "return": []
      },
      {
        "name": "pay",
        "desc": "发起微信支付",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "prepayid",
                "type": "String",
                "desc": "微信支付服务器生成的预支付订单 id，参考微信 app 支付和微信网页支付",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "referer",
                "type": "String",
                "desc": "在微信支付后台配置的域名。从 1040 版本开始，在使用微信网页方式调用时，若该参数不为空，将通过直接设置 referer 的方式拉起微信客户端。",
                "since": "1040",
                "required": false,
                "attributes": []
              },
              {
                "name": "extra",
                "type": "Object",
                "desc": "当前支付方式下，需要填入的额外订单信息，具体见下文的 extra 参数说明",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功后的回调函数，App 方式下，回调发生在用户支付完成之后，网页方式下，回调发生在订单提交给微信 app 之后",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "prepayid",
                    "type": "String",
                    "desc": "只在 App 支付方式下会出现，微信支付订单的 prepayId.",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "final_url",
                    "type": "String",
                    "desc": "只在网页方式下会出现，拼接参数之后，最终用于打开网页的 url.",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "getType",
        "desc": "1040 开始，微信网页支付支持直接设置 referer 方式：",
        "args": [],
        "example": "",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.wxpay",
    "moduleVariable": "wxpay",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "支付宝支付 alipay",
    "href": "https://doc.quickapp.cn/features/service/alipay.html",
    "methods": [
      {
        "name": "pay",
        "desc": "使用支付宝支完成支付",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "orderInfo",
                "type": "String",
                "desc": "服务端生成的订单信息，参考支付宝的请求参数说明文档",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "callback",
                "type": "Function",
                "desc": "支付结果回调，格式参考支付宝的通知参数说明文档",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "alipay.pay({\n  orderInfo: 'order1',\n  callback: function(ret) {\n    console.log('handling callback')\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.alipay",
    "moduleVariable": "alipay",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "第三方分享 share",
    "href": "https://doc.quickapp.cn/features/service/share.html",
    "methods": [
      {
        "name": "getProvider",
        "desc": "获取服务提供商。",
        "args": [],
        "example": "console.log(share.getProvider())\n",
        "return": [],
        "since": "1000"
      },
      {
        "name": "share",
        "desc": "分享内容",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "shareType",
                "type": "int",
                "desc": "分享类型。0：默认图文，1：纯文字，2：纯图片，3：音乐，4：视频。",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "title",
                "type": "String",
                "desc": "分享的标题。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "summary",
                "type": "String",
                "desc": "分享的摘要。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "targetUrl",
                "type": "String",
                "desc": "点击后的跳转 URL",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "imagePath",
                "type": "String",
                "desc": "分享图片/缩略图的本地地址; 另外可支持分享在线图片的 url 1040+",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "mediaUrl",
                "type": "String",
                "desc": "分享的音乐/视频数据 URL",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "platforms",
                "type": "Array",
                "desc": "分享到的平台，不填则默认分享所有平台。可用值包括：WEIBO(新浪微博)、QQ、WEIXIN(微信好友)、WEIXIN_CIRCLE(微信朋友圈)、SYSTEM(系统分享)",
                "since": "1010",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调(暂不支持)",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调，返回值为错误信息和错误码（错误码可见通用错误码）",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "share.share({\n  shareType: 0,\n  title: '标题',\n  summary: '摘要',\n  imagePath: 'xxx/xxx/xxx/share.jpg',\n  targetUrl: 'http://www.example.com',\n  platforms: ['WEIBO'],\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, failMess=${data},code=${code}`)\n  }\n})\n",
        "return": []
      },
      {
        "name": "getAvailablePlatforms",
        "desc": "获取当前可用的支持分享的平台列表",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "platforms",
                    "type": "Array",
                    "desc": "当前可用的支持分享的平台列表，可用值包括：WEIBO(新浪微博)、QQ、WEIXIN、WEIXIN_CIRCLE(微信朋友圈)、SYSTEM(系统分享)",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "complete",
                "type": "Function",
                "desc": "执行结束后的回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "share.getAvailablePlatforms({\n  success: function(data) {\n    for (const i in data.platforms) {\n      console.log(\"platforms: \" + data.platforms[i]);\n    }\n  },\n  fail: funciton(data, code) {\n    console.log(\"handling fail, code=\" + code);\n  }\n})\n",
        "return": [],
        "since": "1010"
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.share",
    "moduleVariable": "share",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "QQ 账户 qqaccount",
    "href": "https://doc.quickapp.cn/features/service/qqaccount.html",
    "methods": [
      {
        "name": "getType",
        "desc": "获取当前的 QQ 登陆方式",
        "args": [],
        "example": "",
        "return": []
      },
      {
        "name": "authorize",
        "desc": "发起 qq 登陆，不同的登陆方式下，应该传入不同的参数，调用之前应该先使用 getType 函数查询当前的登陆方式．",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "state",
                "type": "String",
                "desc": "client 端的状态值。用于第三方应用防止 CSRF 攻击，成功授权后回调时会原样带回。请务必严格按照流程检查用户与 state 参数状态的绑定。app 方式下不使用该参数",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "redirectUri",
                "type": "String",
                "desc": "授权回调地址,APP 方式下,不使用该参数",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "scope",
                "type": "String",
                "desc": "请求用户授权时向用户显示的可进行授权的列表。可填写的值是API 文档中列出的接口，以及一些动作型的授权（目前仅有：do_like），如果要填写多个接口名称，请用逗号隔开。",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "url",
                    "type": "String",
                    "desc": "QQ 回调给出的完整 url,仅在网页方式下会返回",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "code",
                    "type": "String",
                    "desc": "用于换取 accessToken 的 Authorization_Code,仅在网页方式下会返回，通过 code 换取 AccessToken 的方法参考QQ 的文档",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "state",
                    "type": "String",
                    "desc": "原始的 state 值,仅在网页方式下会返回",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "openId",
                    "type": "String",
                    "desc": "QQ 登陆后给该用户的唯一标示,仅在 app 方式下会返回",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "accessToken",
                    "type": "String",
                    "desc": "用于访问 api 的 accessToken,仅在 app 方式下会返回",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "expiresIn",
                    "type": "Number",
                    "desc": "accessToken 的有效时长，以秒为单位",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "getType",
        "desc": "",
        "args": [],
        "example": "",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.qqaccount",
    "moduleVariable": "qqaccount",
    "bgRestrictDesc": "禁止使用。 后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "微信账户 wxaccount",
    "href": "https://doc.quickapp.cn/features/service/wxaccount.html",
    "methods": [
      {
        "name": "getType",
        "desc": "获取当前的微信登陆方式",
        "args": [],
        "example": "",
        "return": []
      },
      {
        "name": "authorize",
        "desc": "发起微信登陆，调用之前应该先使用 getType 函数查询 APP 登陆方式是否被支持",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "scope",
                "type": "String",
                "desc": "应用授权作用域，如获取用户个人信息则填写 snsapi_userinfo，微信关于 scope 的说明",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "state",
                "type": "String",
                "desc": "用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止 csrf 攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加 session 进行校验",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "code",
                    "type": "String",
                    "desc": "用于换取 accessToken 的 code，方法参考微信的文档",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "state",
                    "type": "String",
                    "desc": "第三方程序发送时用来标识其请求的唯一性的标志，由第三方程序调用 sendReq 时传入，由微信终端回传，state 字符串长度不能超过 1K",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "lang",
                    "type": "String",
                    "desc": "微信客户端当前语言",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "country",
                    "type": "String",
                    "desc": "微信用户当前国家信息",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "",
        "return": []
      },
      {
        "name": "getType",
        "desc": "",
        "args": [],
        "example": "",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.wxaccount",
    "moduleVariable": "wxaccount",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  },
  {
    "name": "微博账户 wbaccount",
    "href": "https://doc.quickapp.cn/features/service/wbaccount.html",
    "methods": [
      {
        "name": "getType",
        "desc": "获取当前的微博登录方式",
        "args": [],
        "example": "",
        "return": []
      },
      {
        "name": "authorize",
        "desc": "进行微博授权",
        "args": [
          {
            "name": "OBJECT",
            "desc": "",
            "type": "",
            "required": true,
            "attributes": [
              {
                "name": "redirectUri",
                "type": "String",
                "desc": "授权回调地址，与微博开放平台配置保持一致，默认可填写 https://api.weibo.com/oauth2/default.html",
                "since": "",
                "required": true,
                "attributes": []
              },
              {
                "name": "scope",
                "type": "String",
                "desc": "申请 scope 权限所需参数，可一次申请多个 scope 权限，用逗号分隔。示例：follow_app_official_microblog，可参考：http://open.weibo.com/wiki/Scope",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "success",
                "type": "Function",
                "desc": "成功回调",
                "since": "",
                "required": false,
                "attributes": [
                  {
                    "name": "accessToken",
                    "type": "String",
                    "desc": "授权 token",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "expiresIn",
                    "type": "Number",
                    "desc": "过期时间",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "uid",
                    "type": "String",
                    "desc": "用户 uid",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "refreshToken",
                    "type": "String",
                    "desc": "刷新 token，可用于刷新授权 token 有效期",
                    "since": "",
                    "required": false,
                    "attributes": []
                  },
                  {
                    "name": "phone",
                    "type": "String",
                    "desc": "用户输入的手机号码",
                    "since": "",
                    "required": false,
                    "attributes": []
                  }
                ]
              },
              {
                "name": "fail",
                "type": "Function",
                "desc": "失败回调",
                "since": "",
                "required": false,
                "attributes": []
              },
              {
                "name": "cancel",
                "type": "Function",
                "desc": "取消回调",
                "since": "",
                "required": false,
                "attributes": []
              }
            ]
          }
        ],
        "example": "wbaccount.authorize({\n  redirectUri: 'https://api.weibo.com/oauth2/default.html',\n  scope: 'follow_app_official_microblog',\n  success: function(data) {\n    console.log('handling success. accessToken=' + data.accessToken)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, result data=' + data + ', code=' + code)\n  },\n  cancel: function() {\n    console.log('handling cancel')\n  }\n})\n",
        "return": []
      }
    ],
    "listeners": [],
    "attributes": [],
    "moduleName": "service.wbaccount",
    "moduleVariable": "wbaccount",
    "bgRestrictDesc": "禁止使用。后台运行详细用法参见后台运行 脚本。"
  }
]